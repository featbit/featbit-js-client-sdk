{"version":3,"file":"featbit-js-client-sdk-3.0.10.js","mappings":"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","sources":["webpack://@featbit/js-client-sdk/webpack/universalModuleDefinition","webpack://@featbit/js-client-sdk/./src/Configuration.ts","webpack://@featbit/js-client-sdk/./src/Context.ts","webpack://@featbit/js-client-sdk/./src/FbClientBuilder.ts","webpack://@featbit/js-client-sdk/./src/FbClientCore.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/JsonBootstrapProvider.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/NullBootstrapProvider.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/index.ts","webpack://@featbit/js-client-sdk/./src/constants.ts","webpack://@featbit/js-client-sdk/./src/data-sources/DataSourceUpdates.ts","webpack://@featbit/js-client-sdk/./src/data-sources/createStreamListeners.ts","webpack://@featbit/js-client-sdk/./src/data-sources/index.ts","webpack://@featbit/js-client-sdk/./src/data-sync/DataSyncMode.ts","webpack://@featbit/js-client-sdk/./src/data-sync/NullDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/PollingDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/Requestor.ts","webpack://@featbit/js-client-sdk/./src/data-sync/WebSocketDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/index.ts","webpack://@featbit/js-client-sdk/./src/data-sync/types.ts","webpack://@featbit/js-client-sdk/./src/data-sync/utils.ts","webpack://@featbit/js-client-sdk/./src/errors.ts","webpack://@featbit/js-client-sdk/./src/evaluation/EvalResult.ts","webpack://@featbit/js-client-sdk/./src/evaluation/Evaluator.ts","webpack://@featbit/js-client-sdk/./src/evaluation/ReasonKinds.ts","webpack://@featbit/js-client-sdk/./src/evaluation/data/IFlag.ts","webpack://@featbit/js-client-sdk/./src/evaluation/data/index.ts","webpack://@featbit/js-client-sdk/./src/evaluation/index.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventProcessor.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventQueue.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventSender.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventSerializer.ts","webpack://@featbit/js-client-sdk/./src/events/EventDispatcher.ts","webpack://@featbit/js-client-sdk/./src/events/IEventSender.ts","webpack://@featbit/js-client-sdk/./src/events/NullEventProcessor.ts","webpack://@featbit/js-client-sdk/./src/events/event.ts","webpack://@featbit/js-client-sdk/./src/events/index.ts","webpack://@featbit/js-client-sdk/./src/index.ts","webpack://@featbit/js-client-sdk/./src/logging/BasicLogger.ts","webpack://@featbit/js-client-sdk/./src/logging/SafeLogger.ts","webpack://@featbit/js-client-sdk/./src/logging/format.ts","webpack://@featbit/js-client-sdk/./src/logging/index.ts","webpack://@featbit/js-client-sdk/./src/options/ClientContext.ts","webpack://@featbit/js-client-sdk/./src/options/OptionMessages.ts","webpack://@featbit/js-client-sdk/./src/options/UserBuilder.ts","webpack://@featbit/js-client-sdk/./src/options/Validators.ts","webpack://@featbit/js-client-sdk/./src/options/index.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserInfo.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserPlatform.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserRequests.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserWebSocket.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/FbClient.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/LocalStorageStore.ts","webpack://@featbit/js-client-sdk/./src/platform/index.ts","webpack://@featbit/js-client-sdk/./src/store/BaseStore.ts","webpack://@featbit/js-client-sdk/./src/store/DataKinds.ts","webpack://@featbit/js-client-sdk/./src/store/InMemoryStore.ts","webpack://@featbit/js-client-sdk/./src/store/index.ts","webpack://@featbit/js-client-sdk/./src/store/serialization.ts","webpack://@featbit/js-client-sdk/./src/store/store.ts","webpack://@featbit/js-client-sdk/./src/utils/Emits.ts","webpack://@featbit/js-client-sdk/./src/utils/EventEmitter.ts","webpack://@featbit/js-client-sdk/./src/utils/ValueConverters.ts","webpack://@featbit/js-client-sdk/./src/utils/canonicalizeUri.ts","webpack://@featbit/js-client-sdk/./src/utils/debounce.ts","webpack://@featbit/js-client-sdk/./src/utils/http.ts","webpack://@featbit/js-client-sdk/./src/utils/index.ts","webpack://@featbit/js-client-sdk/./src/utils/isNullOrUndefined.ts","webpack://@featbit/js-client-sdk/./src/utils/serializeUser.ts","webpack://@featbit/js-client-sdk/./src/utils/sleep.ts","webpack://@featbit/js-client-sdk/./src/version.ts","webpack://@featbit/js-client-sdk/webpack/bootstrap","webpack://@featbit/js-client-sdk/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","import { IOptions } from \"./options/IOptions\";\r\nimport { ILogger } from \"./logging/ILogger\";\r\nimport { IValidatedOptions } from \"./options/IValidatedOptions\";\r\nimport { NumberWithMinimum, TypeValidator, TypeValidators, UserValidator } from \"./options/Validators\";\r\nimport OptionMessages from \"./options/OptionMessages\";\r\nimport { IStore } from \"./platform/IStore\";\r\nimport { IClientContext } from \"./options/IClientContext\";\r\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\r\nimport { IDataSourceUpdates } from \"./store/IDataSourceUpdates\";\r\nimport InMemoryStore from \"./store/InMemoryStore\";\r\nimport { VoidFunction } from \"./utils/VoidFunction\";\r\nimport { isNullOrUndefined } from \"./utils/isNullOrUndefined\";\r\nimport { canonicalizeUri } from \"./utils/canonicalizeUri\";\r\nimport { IBootstrapProvider } from \"./bootstrap/IBootstrapProvider\";\r\nimport { NullBootstrapProvider } from \"./bootstrap/NullBootstrapProvider\";\r\nimport { EmptyString } from \"./constants\";\r\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\r\nimport { IUser } from \"./options/IUser\";\r\nimport { JsonBootstrapProvider } from \"./bootstrap\";\r\n\r\n// Once things are internal to the implementation of the SDK we can depend on\r\n// types. Calls to the SDK could contain anything without any regard to typing.\r\n// So, data we take from external sources must be normalized into something\r\n// that can be trusted.\r\n\r\n/**\r\n * These perform cursory validations. Complex objects are implemented with classes\r\n * and these should allow for conditional construction.\r\n */\r\nconst validations: Record<string, TypeValidator> = {\r\n  startWaitTime: TypeValidators.Number,\r\n  sdkKey: TypeValidators.String,\r\n  pollingUri: TypeValidators.String,\r\n  streamingUri: TypeValidators.String,\r\n  eventsUri: TypeValidators.String,\r\n  webSocketPingInterval: TypeValidators.Number,\r\n  logger: TypeValidators.Object,\r\n  store: TypeValidators.ObjectOrFactory,\r\n  dataSynchronizer: TypeValidators.ObjectOrFactory,\r\n  flushInterval: TypeValidators.Number,\r\n  maxEventsInQueue: TypeValidators.Number,\r\n  pollingInterval: TypeValidators.Number,\r\n  offline: TypeValidators.Boolean,\r\n  dataSyncMode: TypeValidators.String,\r\n  bootstrap: TypeValidators.Bootstrap,\r\n  user: TypeValidators.User\r\n};\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const defaultValues: IValidatedOptions = {\r\n  startWaitTime: 5000,\r\n  sdkKey: '',\r\n  pollingUri: '',\r\n  streamingUri: '',\r\n  eventsUri: '',\r\n  dataSyncMode: DataSyncModeEnum.STREAMING,\r\n  sendEvents: true,\r\n  webSocketPingInterval: 18 * 1000,\r\n  flushInterval: 2000,\r\n  maxEventsInQueue: 10000,\r\n  pollingInterval: 30000,\r\n  offline: false,\r\n  store: (options: IOptions) => new InMemoryStore(),\r\n  bootstrap: undefined,\r\n  user: undefined,\r\n};\r\n\r\nfunction validateTypesAndNames(options: IOptions): {\r\n  errors: string[];\r\n  validatedOptions: IValidatedOptions;\r\n} {\r\n  let errors: string[] = [];\r\n  const validatedOptions: IValidatedOptions = {...defaultValues};\r\n  Object.keys(options).forEach((optionName) => {\r\n    // We need to tell typescript it doesn't actually know what options are.\r\n    // If we don't then it complains we are doing crazy things with it.\r\n    const optionValue = (options as unknown as any)[optionName];\r\n    const validator = validations[optionName];\r\n    if (validator) {\r\n      if (!validator.is(optionValue)) {\r\n        if (validator.getType() === 'boolean') {\r\n          errors.push(OptionMessages.wrongOptionTypeBoolean(optionName, typeof optionValue));\r\n          validatedOptions[optionName] = !!optionValue;\r\n        } else if (\r\n          validator instanceof NumberWithMinimum &&\r\n          TypeValidators.Number.is(optionValue)\r\n        ) {\r\n          const {min} = validator as NumberWithMinimum;\r\n          errors.push(OptionMessages.optionBelowMinimum(optionName, optionValue, min));\r\n          validatedOptions[optionName] = min;\r\n        } else if (validator instanceof UserValidator) {\r\n          errors = [...errors, ...validator.messages];\r\n          validatedOptions[optionName] = defaultValues[optionName];\r\n        } else {\r\n          errors.push(\r\n            OptionMessages.wrongOptionType(optionName, validator.getType(), typeof optionValue),\r\n          );\r\n          validatedOptions[optionName] = defaultValues[optionName];\r\n        }\r\n      } else {\r\n        validatedOptions[optionName] = optionValue;\r\n      }\r\n    } else {\r\n      options.logger?.warn(OptionMessages.unknownOption(optionName));\r\n    }\r\n  });\r\n  return {errors, validatedOptions};\r\n}\r\n\r\nfunction validateEndpoints(options: IOptions, validatedOptions: IValidatedOptions) {\r\n  const {streamingUri, pollingUri, eventsUri} = options;\r\n  const streamingUriMissing = isNullOrUndefined(streamingUri) || streamingUri === EmptyString;\r\n  const pollingUriMissing = isNullOrUndefined(pollingUri) || pollingUri === EmptyString;\r\n  const eventsUriMissing = isNullOrUndefined(eventsUri) || eventsUri === EmptyString;\r\n\r\n  if (!validatedOptions.offline && (eventsUriMissing || (streamingUriMissing && pollingUriMissing))) {\r\n    if (eventsUriMissing) {\r\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('eventsUri'));\r\n    }\r\n\r\n    if (validatedOptions.dataSyncMode === DataSyncModeEnum.STREAMING && streamingUriMissing) {\r\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('streamingUri'));\r\n    }\r\n\r\n    if (validatedOptions.dataSyncMode === DataSyncModeEnum.POLLING && pollingUriMissing) {\r\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('pollingUri'));\r\n    }\r\n  }\r\n}\r\n\r\nexport default class Configuration {\r\n  public readonly startWaitTime: number;\r\n\r\n  public readonly sdkKey: string;\r\n\r\n  public readonly streamingUri: string;\r\n\r\n  public readonly pollingUri: string;\r\n\r\n  public readonly eventsUri: string;\r\n\r\n  public readonly webSocketPingInterval: number;\r\n\r\n  public readonly logger?: ILogger;\r\n\r\n  public readonly flushInterval: number;\r\n\r\n  public readonly maxEventsInQueue: number;\r\n\r\n  public readonly pollingInterval: number;\r\n\r\n  public readonly offline: boolean;\r\n\r\n  public readonly dataSyncMode: DataSyncModeEnum;\r\n\r\n  public readonly bootstrapProvider: IBootstrapProvider = new NullBootstrapProvider();\r\n\r\n  public user: IUser;\r\n\r\n  public readonly storeFactory: (clientContext: IClientContext) => IStore;\r\n\r\n  public readonly dataSynchronizerFactory?: (\r\n    clientContext: IClientContext,\r\n    store: IStore,\r\n    dataSourceUpdates: IDataSourceUpdates,\r\n    initSuccessHandler: VoidFunction,\r\n    errorHandler?: (e: Error) => void,\r\n  ) => IDataSynchronizer;\r\n\r\n  constructor(options: IOptions = {}) {\r\n    // The default will handle undefined, but not null.\r\n    // Because we can be called from JS we need to be extra defensive.\r\n    options = options || {};\r\n    // If there isn't a valid logger from the platform, then logs would go nowhere.\r\n    this.logger = options.logger;\r\n\r\n    const {errors, validatedOptions} = validateTypesAndNames(options);\r\n    errors.forEach((error) => {\r\n      this.logger?.warn(error);\r\n    });\r\n\r\n    this.user = options.user!;\r\n\r\n    validateEndpoints(options, validatedOptions);\r\n    this.streamingUri = `${ canonicalizeUri(validatedOptions.streamingUri) }/streaming`;\r\n    this.pollingUri = `${ canonicalizeUri(validatedOptions.pollingUri) }/api/public/sdk/client/latest-all`;\r\n    this.eventsUri = `${ canonicalizeUri(validatedOptions.eventsUri) }/api/public/insight/track`;\r\n\r\n    this.startWaitTime = validatedOptions.startWaitTime;\r\n\r\n    this.sdkKey = validatedOptions.sdkKey;\r\n    this.webSocketPingInterval = validatedOptions.webSocketPingInterval!;\r\n\r\n    this.flushInterval = validatedOptions.flushInterval;\r\n    this.maxEventsInQueue = validatedOptions.maxEventsInQueue;\r\n    this.pollingInterval = validatedOptions.pollingInterval;\r\n\r\n    this.offline = validatedOptions.offline;\r\n    if (validatedOptions.bootstrap && validatedOptions.bootstrap.length > 0) {\r\n      try {\r\n        this.bootstrapProvider = new JsonBootstrapProvider(validatedOptions.bootstrap);\r\n      } catch (_) {\r\n        this.logger?.error('Failed to parse bootstrap JSON, use NullBootstrapProvider.');\r\n      }\r\n    }\r\n\r\n    if (this.offline) {\r\n      this.logger?.info('Offline mode enabled. No data synchronization with the FeatBit server will occur.');\r\n    }\r\n\r\n    this.dataSyncMode = validatedOptions.dataSyncMode;\r\n\r\n    if (TypeValidators.Function.is(validatedOptions.dataSynchronizer)) {\r\n      // @ts-ignore\r\n      this.dataSynchronizerFactory = validatedOptions.dataSynchronizer;\r\n    } else {\r\n      // The processor is already created, just have the method return it.\r\n      // @ts-ignore\r\n      this.dataSynchronizerFactory = () => validatedOptions.dataSynchronizer;\r\n    }\r\n\r\n    if (TypeValidators.Function.is(validatedOptions.store)) {\r\n      // @ts-ignore\r\n      this.storeFactory = validatedOptions.store;\r\n    } else {\r\n      // The store is already created, just have the method return it.\r\n      // @ts-ignore\r\n      this.storeFactory = () => validatedOptions.store;\r\n    }\r\n  }\r\n}","import { IUser } from \"./options/IUser\";\r\n\r\nexport default class Context {\r\n  private _user?: IUser;\r\n  /**\r\n   * Is this a valid context. If a valid context cannot be created, then this flag will be true.\r\n   * The validity of a context should be tested before it is used.\r\n   */\r\n  public readonly valid: boolean;\r\n\r\n  public readonly message?: string;\r\n\r\n  /**\r\n   * Contexts should be created using the static factory method {@link Context.fromUser}.\r\n   *\r\n   * The factory methods are static functions within the class because they access private\r\n   * implementation details, so they cannot be free functions.\r\n   */\r\n  private constructor(valid: boolean, message?: string) {\r\n    this.valid = valid;\r\n    this.message = message;\r\n  }\r\n\r\n  public static fromUser(user: IUser): Context {\r\n    if (!user) {\r\n      return Context.contextForError('No user specified');\r\n    }\r\n\r\n    const {keyId, name} = user;\r\n\r\n    if (keyId === undefined || keyId === null || keyId.trim() === '') {\r\n      return Context.contextForError('key is mandatory');\r\n    }\r\n\r\n    const context = new Context(true);\r\n    context._user = user;\r\n\r\n    return context;\r\n  }\r\n\r\n  get user(): IUser {\r\n    return this._user!;\r\n  }\r\n\r\n  get keyId(): string {\r\n    return this._user!.keyId;\r\n  }\r\n\r\n  value(property: string): any {\r\n    if (property === 'keyId') {\r\n      return this._user?.keyId;\r\n    } else if (property === 'name') {\r\n      return this._user?.name;\r\n    } else {\r\n      return this._user?.customizedProperties?.find(x => x.name === property)?.value;\r\n    }\r\n  }\r\n\r\n  private static contextForError(message: string) {\r\n    return new Context(false, message);\r\n  }\r\n}","import { IFbClient } from \"./IFbClient\";\r\nimport { IOptions } from \"./options/IOptions\";\r\nimport FbClient from \"./platform/browser/FbClient\";\r\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\r\nimport { IClientContext } from \"./options/IClientContext\";\r\nimport { IDataSourceUpdates } from \"./store/IDataSourceUpdates\";\r\nimport { VoidFunction } from \"./utils/VoidFunction\";\r\nimport { ILogger } from \"./logging/ILogger\";\r\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\r\nimport { IUser } from \"./options/IUser\";\r\nimport { IFlagBase } from \"./evaluation\";\r\nimport { IPlatform } from \"./platform\";\r\n\r\n/**\r\n * Creates an instance of the FeatBit client.\r\n *\r\n * Applications should instantiate a single instance for the lifetime of the application.\r\n * The client will begin attempting to connect to FeatBit as soon as it is created. To\r\n * determine when it is ready to use, call {@link IFbClient.waitForInitialization}, or register an\r\n * event listener for the `\"ready\"` event using {@link IFbClient.on}.\r\n *\r\n * **Important:** Do **not** try to instantiate `FbClient` with its constructor\r\n * (`new FbClientNode()`); the SDK does not currently support\r\n * this.\r\n *\r\n * @return\r\n *   The new {@link IFbClient} instance.\r\n */\r\nexport class FbClientBuilder {\r\n  private _options: IOptions;\r\n  private _platform: IPlatform | undefined;\r\n\r\n  constructor(options?: IOptions) {\r\n    this._options = options ?? {};\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of the FeatBit client.\r\n   */\r\n  build(): IFbClient {\r\n    return new FbClient(this._options, this._platform);\r\n  }\r\n\r\n  platform(platform: IPlatform | undefined): FbClientBuilder {\r\n    this._platform = platform;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.startWaitTime}.\r\n   */\r\n  startWaitTime(startWaitTime: number): FbClientBuilder {\r\n    this._options.startWaitTime = startWaitTime;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.sdkKey}.\r\n   */\r\n  sdkKey(sdkKey: string): FbClientBuilder {\r\n    this._options.sdkKey = sdkKey;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.user}.\r\n   */\r\n  user(user: IUser): FbClientBuilder {\r\n    this._options.user = user;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.streamingUri}.\r\n   */\r\n  streamingUri(streamingUri: string): FbClientBuilder {\r\n    this._options.streamingUri = streamingUri;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.pollingUri}.\r\n   */\r\n  pollingUri(pollingUri: string): FbClientBuilder {\r\n    this._options.pollingUri = pollingUri;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.eventsUri}.\r\n   */\r\n  eventsUri(eventsUri: string): FbClientBuilder {\r\n    this._options.eventsUri = eventsUri;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.dataSyncMode}.\r\n   */\r\n  dataSyncMode(mode: DataSyncModeEnum): FbClientBuilder {\r\n    this._options.dataSyncMode = mode;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.pollingInterval}.\r\n   */\r\n  pollingInterval(pollingInterval: number): FbClientBuilder {\r\n    this._options.pollingInterval = pollingInterval;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.flushInterval}.\r\n   */\r\n  flushInterval(flushInterval: number): FbClientBuilder {\r\n    this._options.flushInterval = flushInterval;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.maxEventsInQueue}.\r\n   */\r\n  maxEventsInQueue(maxEventsInQueue: number): FbClientBuilder {\r\n    this._options.maxEventsInQueue = maxEventsInQueue;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.logger}.\r\n   */\r\n  logger(logger: ILogger): FbClientBuilder {\r\n    this._options.logger = logger;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.offline}.\r\n   */\r\n  offline(offline: boolean): FbClientBuilder {\r\n    this._options.offline = offline;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Use the JsonBootstrapProvider.\r\n   */\r\n  bootstrap(flags: IFlagBase[]): FbClientBuilder {\r\n    this._options.bootstrap = flags;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Refer to {@link IOptions.dataSynchronizer}.\r\n   */\r\n  dataSynchronizer(\r\n    dataSynchronizer: IDataSynchronizer |\r\n    ((\r\n      clientContext: IClientContext,\r\n      dataSourceUpdates: IDataSourceUpdates,\r\n      initSuccessHandler: VoidFunction,\r\n      errorHandler?: (e: Error) => void,\r\n    ) => IDataSynchronizer)\r\n  ): FbClientBuilder {\r\n    this._options.dataSynchronizer = dataSynchronizer;\r\n    return this;\r\n  }\r\n}","import { IFbClientCore } from \"./IFbClientCore\";\r\nimport { IPlatform } from \"./platform/IPlatform\";\r\nimport Configuration from \"./Configuration\";\r\nimport { ILogger } from \"./logging/ILogger\";\r\nimport ClientContext from \"./options/ClientContext\";\r\nimport DataSourceUpdates from \"./data-sources/DataSourceUpdates\";\r\nimport { createStreamListeners } from \"./data-sources/createStreamListeners\";\r\nimport { IEvalDetail } from \"./evaluation/IEvalDetail\";\r\nimport WebSocketDataSynchronizer from \"./data-sync/WebSocketDataSynchronizer\";\r\nimport PollingDataSynchronizer from \"./data-sync/PollingDataSynchronizer\";\r\nimport Requestor from \"./data-sync/Requestor\";\r\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\r\nimport DataKinds from \"./store/DataKinds\";\r\nimport Evaluator from \"./evaluation/Evaluator\";\r\nimport { ReasonKinds } from \"./evaluation/ReasonKinds\";\r\nimport { ClientError, TimeoutError } from \"./errors\";\r\nimport Context from \"./Context\";\r\nimport { IConvertResult, ValueConverters } from \"./utils/ValueConverters\";\r\nimport { NullDataSynchronizer } from \"./data-sync/NullDataSynchronizer\";\r\nimport { IEventProcessor } from \"./events/IEventProcessor\";\r\nimport { NullEventProcessor } from \"./events/NullEventProcessor\";\r\nimport { DefaultEventProcessor } from \"./events/DefaultEventProcessor\";\r\nimport { IStore } from \"./platform/IStore\";\r\nimport { IOptions } from \"./options/IOptions\";\r\nimport { MetricEvent } from \"./events/event\";\r\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\r\nimport { IUser } from \"./options/IUser\";\r\nimport { UserValidator } from \"./options/Validators\";\r\n\r\nenum ClientState {\r\n  Initializing,\r\n  Initialized,\r\n  Failed,\r\n}\r\n\r\nexport interface IClientCallbacks {\r\n  onError: (err: Error) => void;\r\n  onFailed: (err: Error) => void;\r\n  onReady: () => void;\r\n  // Called whenever flags change, if there are listeners.\r\n  onUpdate: (keys: string[]) => void;\r\n  // Method to check if event listeners have been registered.\r\n  // If none are registered, then onUpdate will never be called.\r\n  hasEventListeners: () => boolean;\r\n}\r\n\r\nexport class FbClientCore implements IFbClientCore {\r\n  private state: ClientState = ClientState.Initializing;\r\n\r\n  private store?: IStore;\r\n\r\n  private dataSynchronizer?: IDataSynchronizer;\r\n\r\n  private eventProcessor?: IEventProcessor;\r\n\r\n  private evaluator?: Evaluator;\r\n\r\n  private initResolve?: (value: IFbClientCore | PromiseLike<IFbClientCore>) => void;\r\n\r\n  private initReject?: (err: Error) => void;\r\n\r\n  private rejectionReason: Error | undefined;\r\n\r\n  private initializedPromise?: Promise<IFbClientCore>;\r\n\r\n  private config: Configuration;\r\n\r\n  private dataSourceUpdates?: DataSourceUpdates;\r\n\r\n  private onError: (err: Error) => void;\r\n\r\n  private onFailed: (err: Error) => void;\r\n\r\n  private onReady: () => void;\r\n\r\n  logger?: ILogger;\r\n\r\n  constructor(\r\n    private options: IOptions,\r\n    private platform: IPlatform,\r\n    callbacks: IClientCallbacks\r\n  ) {\r\n    this.onError = callbacks.onError;\r\n    this.onFailed = callbacks.onFailed;\r\n    this.onReady = callbacks.onReady;\r\n\r\n    const {onUpdate, hasEventListeners} = callbacks;\r\n    const config = new Configuration(options);\r\n\r\n    if (!config.sdkKey && !config.offline) {\r\n      throw new Error('You must configure the client with an SDK key');\r\n    }\r\n\r\n    if (!config.user) {\r\n      throw new Error('You must configure the client with a user');\r\n    }\r\n\r\n    this.config = config;\r\n    this.logger = config.logger;\r\n\r\n    this.init(onUpdate, hasEventListeners);\r\n  }\r\n\r\n  private async init(onUpdate: (keys: string[]) => void, hasEventListeners: () => boolean) {\r\n    const clientContext = new ClientContext(this.config.sdkKey, this.config, this.platform);\r\n    this.store = this.config.storeFactory(clientContext);\r\n    await this.store.identify(this.config.user);\r\n    this.dataSourceUpdates = new DataSourceUpdates(this.store, hasEventListeners, onUpdate);\r\n    this.evaluator = new Evaluator(this.store);\r\n\r\n    // use bootstrap provider to populate store\r\n    await this.config.bootstrapProvider.populate(this.config.user.keyId, this.dataSourceUpdates);\r\n\r\n    if (this.config.offline) {\r\n      this.eventProcessor = new NullEventProcessor();\r\n      this.dataSynchronizer = new NullDataSynchronizer();\r\n\r\n      this.initSuccess();\r\n    } else {\r\n      this.eventProcessor = new DefaultEventProcessor(clientContext);\r\n\r\n      const listeners = createStreamListeners(this.dataSourceUpdates, this.logger, {\r\n        put: () => this.initSuccess(),\r\n        patch: () => this.initSuccess()\r\n      });\r\n\r\n      const dataSynchronizer = this.config.dataSyncMode === DataSyncModeEnum.STREAMING\r\n        ? new WebSocketDataSynchronizer(\r\n          this.config.sdkKey,\r\n          this.config.user,\r\n          clientContext,\r\n          this.platform.webSocket,\r\n          () => this.store!.version,\r\n          listeners,\r\n          this.config.webSocketPingInterval\r\n        )\r\n        : new PollingDataSynchronizer(\r\n          this.config,\r\n          new Requestor(this.config.sdkKey, this.config, this.platform.info, this.platform.requests),\r\n          () => this.store!.version,\r\n          listeners,\r\n          (e) => this.dataSourceErrorHandler(e),\r\n        );\r\n\r\n      this.dataSynchronizer = this.config.dataSynchronizerFactory?.(\r\n        clientContext,\r\n        this.store,\r\n        this.dataSourceUpdates,\r\n        () => this.initSuccess(),\r\n        (e) => this.dataSourceErrorHandler(e),\r\n      ) ?? dataSynchronizer;\r\n    }\r\n\r\n    this.start();\r\n  }\r\n\r\n  async identify(user: IUser) {\r\n    const validator = new UserValidator();\r\n    if (!validator.is(user)) {\r\n      validator.messages.forEach((error: string) => {\r\n        this.logger?.warn(error);\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.config.user = user;\r\n    await this.store!.identify(user);\r\n    this.dataSynchronizer!.identify(user);\r\n    const [ flags ] = this.store!.all(DataKinds.Flags);\r\n    if (Object.keys(flags).length === 0) {\r\n      await this.config.bootstrapProvider.populate(user.keyId, this.dataSourceUpdates!);\r\n    }\r\n  }\r\n\r\n  private start() {\r\n    if (this.config.offline) {\r\n      return;\r\n    }\r\n\r\n    this.dataSynchronizer!.start();\r\n    setTimeout(() => {\r\n      if (!this.initialized()) {\r\n        const msg = `FbClient failed to start successfully within ${ this.config.startWaitTime } milliseconds. ` +\r\n          'This error usually indicates a connection issue with FeatBit or an invalid sdkKey.' +\r\n          'Please double-check your sdkKey and streamingUri/pollingUri configuration. ' +\r\n          'We will continue to initialize the FbClient, it still have a chance to get to work ' +\r\n          'if it\\'s a temporary network issue';\r\n\r\n        const error = new TimeoutError(msg);\r\n        this.state = ClientState.Failed;\r\n        this.rejectionReason = error;\r\n        this.initReject?.(error);\r\n\r\n        return this.logger?.warn(msg);\r\n      }\r\n    }, this.config.startWaitTime);\r\n  }\r\n\r\n  initialized(): boolean {\r\n    return this.state === ClientState.Initialized;\r\n  }\r\n\r\n  waitForInitialization(): Promise<IFbClientCore> {\r\n    // An initialization promise is only created if someone is going to use that promise.\r\n    // If we always created an initialization promise, and there was no call waitForInitialization\r\n    // by the time the promise was rejected, then that would result in an unhandled promise\r\n    // rejection.\r\n\r\n    // Initialization promise was created by a previous call to waitForInitialization.\r\n    if (this.initializedPromise) {\r\n      return this.initializedPromise;\r\n    }\r\n\r\n    // Initialization completed before waitForInitialization was called, so we have completed\r\n    // and there was no promise. So we make a resolved promise and return it.\r\n    if (this.state === ClientState.Initialized) {\r\n      this.initializedPromise = Promise.resolve(this);\r\n      return this.initializedPromise;\r\n    }\r\n\r\n    // Initialization failed before waitForInitialization was called, so we have completed\r\n    // and there was no promise. So we make a rejected promise and return it.\r\n    if (this.state === ClientState.Failed) {\r\n      this.initializedPromise = Promise.reject(this.rejectionReason);\r\n      return this.initializedPromise;\r\n    }\r\n\r\n    if (!this.initializedPromise) {\r\n      this.initializedPromise = new Promise((resolve, reject) => {\r\n        this.initResolve = resolve;\r\n        this.initReject = reject;\r\n      });\r\n    }\r\n    return this.initializedPromise;\r\n  }\r\n\r\n  boolVariation(\r\n    key: string,\r\n    defaultValue: boolean\r\n  ): boolean {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.bool).value!;\r\n  }\r\n\r\n  boolVariationDetail(\r\n    key: string,\r\n    defaultValue: boolean\r\n  ): IEvalDetail<boolean> {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.bool);\r\n  }\r\n\r\n  jsonVariation(key: string, defaultValue: any): any {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.json).value!;\r\n  }\r\n\r\n  jsonVariationDetail(key: string, defaultValue: any): IEvalDetail<any> {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.json);\r\n  }\r\n\r\n  numberVariation(key: string, defaultValue: number): number {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.number).value!;\r\n  }\r\n\r\n  numberVariationDetail(key: string, defaultValue: number): IEvalDetail<number> {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.number);\r\n  }\r\n\r\n  stringVariation(key: string, defaultValue: string): string {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.string).value!;\r\n  }\r\n\r\n  stringVariationDetail(key: string, defaultValue: string): IEvalDetail<string> {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.string);\r\n  }\r\n\r\n  variation(key: string, defaultValue: string): string {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.string).value!;\r\n  }\r\n\r\n  variationDetail(key: string, defaultValue: string): IEvalDetail<string> {\r\n    return this.evaluateCore(key, defaultValue, ValueConverters.string);\r\n  }\r\n\r\n  getAllVariations(): Promise<IEvalDetail<string>[]> {\r\n    const context = Context.fromUser(this.config.user);\r\n    if (!context.valid) {\r\n      const error = new ClientError(\r\n        `${ context.message ?? 'User not valid;' } returning default value.`,\r\n      );\r\n      this.onError(error);\r\n\r\n      return Promise.resolve([]);\r\n    }\r\n\r\n    const [flags, _] = this.store!.all(DataKinds.Flags);\r\n    const result = Object.keys(flags).map(flagKey => {\r\n      const evalResult = this.evaluator!.evaluate(flagKey);\r\n      return {flagKey, kind: evalResult.kind, reason: evalResult.reason, value: evalResult.value?.variation};\r\n    });\r\n\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  async close(): Promise<void> {\r\n    await this.eventProcessor!.close();\r\n    this.dataSynchronizer?.close();\r\n    this.store!.close();\r\n  }\r\n\r\n  track(eventName: string, metricValue?: number | undefined): void {\r\n    const metricEvent = new MetricEvent(this.config.user, eventName, this.platform.info.appType, metricValue ?? 1);\r\n    this.eventProcessor!.record(metricEvent);\r\n    return;\r\n  }\r\n\r\n  async flush(callback?: (res: boolean) => void): Promise<boolean> {\r\n    try {\r\n      await this.eventProcessor!.flush();\r\n      callback?.(true);\r\n      return true;\r\n    } catch (err) {\r\n      callback?.(false);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  evaluateCore<TValue>(\r\n    flagKey: string,\r\n    defaultValue: TValue,\r\n    typeConverter: (value: string) => IConvertResult<TValue>\r\n  ): IEvalDetail<TValue> {\r\n    const context = Context.fromUser(this.config.user);\r\n    if (!context.valid) {\r\n      const error = new ClientError(\r\n        `${ context.message ?? 'User not valid;' } returning default value.`,\r\n      );\r\n      this.onError(error);\r\n\r\n      return {flagKey, kind: ReasonKinds.Error, reason: error.message, value: defaultValue};\r\n    }\r\n\r\n    const evalResult = this.evaluator!.evaluate(flagKey);\r\n\r\n    if (evalResult.kind === ReasonKinds.FlagNotFound) {\r\n      // flag not found, return default value\r\n      const error = new ClientError(evalResult.reason!);\r\n      this.onError(error);\r\n\r\n      return {flagKey, kind: evalResult.kind, reason: evalResult.reason, value: defaultValue};\r\n    }\r\n\r\n    if (!this.initialized()) {\r\n      this.logger?.warn(\r\n        'Variation called before FeatBit client initialization completed (did you wait for the' +\r\n        \"'ready' event?)\",\r\n      );\r\n    } else {\r\n      // send event\r\n      this.eventProcessor!.record(evalResult.toEvalEvent(this.config.user));\r\n    }\r\n\r\n    const {isSucceeded, value} = typeConverter(evalResult.value?.variation!);\r\n    return isSucceeded\r\n      ? {flagKey, kind: evalResult.kind, reason: evalResult.reason, value}\r\n      : {flagKey, kind: ReasonKinds.WrongType, reason: 'type mismatch', value: defaultValue};\r\n  }\r\n\r\n  private dataSourceErrorHandler(e: any) {\r\n    const error =\r\n      e.code === 401 ? new Error('Authentication failed. Double check your SDK key.') : e;\r\n\r\n    this.onError(error);\r\n    this.onFailed(error);\r\n\r\n    if (!this.initialized()) {\r\n      this.state = ClientState.Failed;\r\n      this.rejectionReason = error;\r\n      this.initReject?.(error);\r\n    }\r\n  }\r\n\r\n  private initSuccess() {\r\n    if (!this.initialized()) {\r\n      this.state = ClientState.Initialized;\r\n      this.logger?.info('FbClient started successfully.');\r\n      this.initResolve?.(this);\r\n      this.onReady();\r\n    }\r\n  }\r\n}\r\n","import { IBootstrapProvider } from \"./IBootstrapProvider\";\r\nimport { deserializeAll } from \"../store/serialization\";\r\nimport { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\r\nimport { IStoreDataStorage } from \"../store/store\";\r\nimport { isNullOrUndefined } from \"../utils/isNullOrUndefined\";\r\nimport { IFlag, IFlagBase } from \"../evaluation/data/IFlag\";\r\n\r\nexport class JsonBootstrapProvider implements IBootstrapProvider {\r\n  private dataSet?: IStoreDataStorage;\r\n\r\n  constructor(bootstrap: IFlagBase[]) {\r\n    const flags: IFlag[] = (bootstrap || []).map((flag: IFlagBase) => ({...flag, variationOptions: flag.variationOptions || [{id: null, variation: flag.variation}]})) as IFlag[];\r\n\r\n    const data = deserializeAll(flags);\r\n    this.dataSet = {\r\n      flags: data.flags,\r\n      version: 0\r\n    };\r\n  }\r\n\r\n  populate(userKeyId: string, dataSourceUpdates: IDataSourceUpdates, callback?: () => void): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      if (isNullOrUndefined(this.dataSet)) {\r\n        return resolve();\r\n      }\r\n\r\n      const internalCallback = () => {\r\n        resolve();\r\n        callback?.();\r\n      }\r\n\r\n      dataSourceUpdates.init(userKeyId, this.dataSet!, internalCallback);\r\n    });\r\n  }\r\n}","import { IBootstrapProvider } from \"./IBootstrapProvider\";\r\nimport { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\r\nimport { IStoreDataStorage } from \"../store/store\";\r\n\r\nexport class NullBootstrapProvider implements IBootstrapProvider {\r\n  private dataSet?: IStoreDataStorage;\r\n\r\n  constructor() {\r\n    this.dataSet = {\r\n      flags: {},\r\n      version: 0\r\n    };\r\n  }\r\n\r\n  populate(userKeyId: string, dataSourceUpdates: IDataSourceUpdates, callback?: () => void): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      resolve();\r\n      callback?.();\r\n    });\r\n  }\r\n}","export * from './IBootstrapProvider';\r\nexport * from './JsonBootstrapProvider';\r\nexport * from './NullBootstrapProvider';","export const EmptyString = '';\r\nexport const MinInt: number = 0x80000000;","import { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\r\nimport {\r\n  IStoreDataStorage,\r\n  IStoreItem,\r\n  IKeyedStoreItem\r\n} from \"../store/store\";\r\nimport { IStore } from \"../platform/IStore\";\r\nimport { IDataKind } from \"../IDataKind\";\r\nimport DataKinds from \"../store/DataKinds\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport default class DataSourceUpdates implements IDataSourceUpdates {\r\n\r\n  constructor(\r\n    private readonly store: IStore,\r\n    private readonly hasEventListeners: () => boolean,\r\n    private readonly onChange: (keys: string[]) => void,\r\n  ) {\r\n  }\r\n\r\n  init(userKeyId: string, allData: IStoreDataStorage, callback?: () => void): void {\r\n    if (userKeyId !== this.store.user.keyId) {\r\n      callback?.();\r\n      return;\r\n    }\r\n\r\n    const checkForChanges = this.hasEventListeners();\r\n    const doInit = async (oldData?: IStoreDataStorage) => {\r\n      await this.store.init(allData);\r\n      Promise.resolve().then(() => {\r\n        if (checkForChanges) {\r\n          const updatedKeys = Object.keys(allData)\r\n            .flatMap((namespace) => {\r\n              const oldDataForKind = oldData?.[namespace] || {};\r\n              const newDataForKind = allData[namespace];\r\n              const mergedData = {...oldDataForKind, ...newDataForKind};\r\n              return Object.keys(mergedData)\r\n                .filter((key: string) => this.isUpdated(oldDataForKind && oldDataForKind[key], newDataForKind && newDataForKind[key]));\r\n            });\r\n          updatedKeys.length > 0 && this.onChange(updatedKeys);\r\n        }\r\n      });\r\n      callback?.();\r\n    };\r\n\r\n    if (checkForChanges) {\r\n      const [flags, version] = this.store.all(DataKinds.Flags);\r\n      const oldData = {\r\n        flags,\r\n        version\r\n      };\r\n      doInit(oldData);\r\n    } else {\r\n      doInit();\r\n    }\r\n  }\r\n\r\n  upsert(userKeyId: string, kind: IDataKind, data: IKeyedStoreItem, callback: () => void): void {\r\n    if (userKeyId !== this.store.user.keyId) {\r\n      callback?.();\r\n      return;\r\n    }\r\n\r\n    const {key} = data;\r\n    const checkForChanges = this.hasEventListeners();\r\n    const doUpsert = async (oldItem?: IStoreItem) => {\r\n      await this.store.upsert(kind, data);\r\n      Promise.resolve().then(() => {\r\n        if (checkForChanges && this.isUpdated(oldItem, data[key])) {\r\n          this.onChange([key]);\r\n        }\r\n      });\r\n\r\n      callback?.();\r\n    };\r\n    if (checkForChanges) {\r\n      const item = this.store.get(kind, key);\r\n      doUpsert(item || undefined);\r\n    } else {\r\n      doUpsert();\r\n    }\r\n  }\r\n\r\n  private isUpdated(oldData?: IStoreItem, newData?: IStoreItem): boolean {\r\n    if (!oldData && !newData) {\r\n      return false;\r\n    }\r\n\r\n    if (!oldData || !newData) {\r\n      return true;\r\n    }\r\n\r\n    return newData.version >= oldData.version && newData[\"variation\"] !== oldData[\"variation\"];\r\n  }\r\n}","import { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\nimport { VoidFunction } from \"../utils/VoidFunction\";\r\nimport {\r\n  deserializeAll,\r\n  deserializePatch,\r\n  IPatchData,\r\n  Flags\r\n} from \"../store/serialization\";\r\nimport DataKinds from \"../store/DataKinds\";\r\nimport { IStoreDataStorage } from \"../store/store\";\r\nimport { EventName, ProcessStreamResponse } from \"../data-sync/types\";\r\n\r\nexport const createPutListener = (\r\n  dataSourceUpdates: IDataSourceUpdates,\r\n  logger?: ILogger,\r\n  onPutCompleteHandler: VoidFunction = () => {\r\n  },\r\n) => ({\r\n  deserializeData: deserializeAll,\r\n  processJson: async (userKeyId: string, {flags}: Flags) => {\r\n    const initData: IStoreDataStorage = {\r\n      flags: flags,\r\n      version: 0\r\n    };\r\n\r\n    logger?.debug('Initializing all data');\r\n    dataSourceUpdates.init(userKeyId, initData, onPutCompleteHandler);\r\n  },\r\n});\r\n\r\nexport const createPatchListener = (\r\n  dataSourceUpdates: IDataSourceUpdates,\r\n  logger?: ILogger,\r\n  onPatchCompleteHandler: VoidFunction = () => {\r\n  },\r\n) => ({\r\n  deserializeData: deserializePatch,\r\n  processJson: async (userKeyId: string, data: IPatchData[]) => {\r\n    if (data?.length === 0) {\r\n      onPatchCompleteHandler?.();\r\n      return;\r\n    }\r\n\r\n    data?.forEach(item => {\r\n      logger?.debug(`Updating ${ item.data.key } in ${ item.kind.namespace }`);\r\n      dataSourceUpdates.upsert(userKeyId, item.kind, item.data, onPatchCompleteHandler);\r\n    })\r\n  },\r\n});\r\n\r\n\r\nexport const createStreamListeners = (\r\n  dataSourceUpdates: IDataSourceUpdates,\r\n  logger?: ILogger,\r\n  onCompleteHandlers?: {\r\n    put?: VoidFunction;\r\n    patch?: VoidFunction;\r\n    delete?: VoidFunction;\r\n  },\r\n) => {\r\n  const listeners = new Map<EventName, ProcessStreamResponse>();\r\n  listeners.set('put', createPutListener(dataSourceUpdates, logger, onCompleteHandlers?.put));\r\n  listeners.set('patch', createPatchListener(dataSourceUpdates, logger, onCompleteHandlers?.patch));\r\n  return listeners;\r\n};\r\n","export * from './createStreamListeners';\r\nexport * from './DataSourceUpdates';","export enum DataSyncModeEnum {\r\n  POLLING = 'polling',\r\n  STREAMING = 'streaming'\r\n}","import { IDataSynchronizer } from \"./IDataSynchronizer\";\r\n\r\nexport class NullDataSynchronizer implements IDataSynchronizer {\r\n  close(): void {\r\n  }\r\n\r\n  start(): void {\r\n  }\r\n\r\n  stop(): void {\r\n  }\r\n\r\n  identify(): void {\r\n  }\r\n}","import { isHttpRecoverable, PollingError } from \"../errors\";\r\nimport { IDataSynchronizer } from \"./IDataSynchronizer\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\nimport Configuration from \"../Configuration\";\r\nimport { EventName, PollingErrorHandler, ProcessStreamResponse, StreamResponseEventType } from \"./types\";\r\nimport Requestor from \"./Requestor\";\r\nimport { httpErrorMessage } from \"../utils/http\";\r\nimport { IUser } from \"../options/IUser\";\r\n\r\nexport default class PollingDataSynchronizer implements IDataSynchronizer {\r\n  private stopped = false;\r\n\r\n  private logger?: ILogger;\r\n\r\n  private pollingInterval: number;\r\n\r\n  private user: IUser | undefined;\r\n\r\n  private timeoutHandle: any;\r\n\r\n  constructor(\r\n    config: Configuration,\r\n    private readonly requestor: Requestor,\r\n    private readonly getStoreTimestamp: () => number,\r\n    private readonly listeners: Map<EventName, ProcessStreamResponse>,\r\n    private readonly errorHandler?: PollingErrorHandler,\r\n  ) {\r\n    this.logger = config.logger;\r\n    this.pollingInterval = config.pollingInterval;\r\n    this.user = config.user;\r\n  }\r\n\r\n  private poll() {\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    const startTime = Date.now();\r\n    this.logger?.debug('Polling for feature flag and segments updates');\r\n    this.requestor.requestData(this.getStoreTimestamp(), this.user, (err, body) => {\r\n      const elapsed = Date.now() - startTime;\r\n      const sleepFor = Math.max(this.pollingInterval - elapsed, 0);\r\n\r\n      this.logger?.debug('Elapsed: %d ms, sleeping for %d ms', elapsed, sleepFor);\r\n      if (err) {\r\n        const {status} = err;\r\n        if (status && !isHttpRecoverable(status)) {\r\n          const message = httpErrorMessage(err, 'polling request');\r\n          this.logger?.error(message);\r\n          this.errorHandler?.(new PollingError(message, status));\r\n          // It is not recoverable, return and do not trigger another\r\n          // poll.\r\n          return;\r\n        }\r\n        this.logger?.warn(httpErrorMessage(err, 'polling request', 'will retry'));\r\n      } else {\r\n        let featureFlags = [];\r\n        let userKeyId = this.user?.keyId!;\r\n        let processStreamResponse: ProcessStreamResponse | undefined = this.listeners.get('patch');\r\n\r\n        if (body) {\r\n          const message = JSON.parse(body);\r\n          if (message.messageType === 'data-sync') {\r\n            switch (message.data.eventType) {\r\n              case StreamResponseEventType.patch:\r\n                processStreamResponse = this.listeners.get('patch');\r\n                break;\r\n              case StreamResponseEventType.full:\r\n                processStreamResponse = this.listeners.get('put');\r\n                break;\r\n            }\r\n\r\n            ({featureFlags, userKeyId} = message.data);\r\n          }\r\n        }\r\n\r\n        const data = processStreamResponse?.deserializeData?.(featureFlags);\r\n        processStreamResponse?.processJson?.(userKeyId, data);\r\n      }\r\n\r\n      // Falling through, there was some type of error and we need to trigger\r\n      // a new poll.\r\n      this.timeoutHandle = setTimeout(() => {\r\n        this.poll();\r\n      }, sleepFor);\r\n    });\r\n  }\r\n\r\n  identify(user: IUser) {\r\n    this.user = {...user};\r\n  }\r\n\r\n  close(): void {\r\n    this.stop();\r\n  }\r\n\r\n  start(): void {\r\n    this.poll();\r\n  }\r\n\r\n  stop(): void {\r\n    if (this.timeoutHandle) {\r\n      clearTimeout(this.timeoutHandle);\r\n      this.timeoutHandle = undefined;\r\n    }\r\n    this.stopped = true;\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { IRequestor } from \"./IRequestor\";\r\nimport Configuration from \"../Configuration\";\r\nimport { IInfo } from \"../platform/IInfo\";\r\nimport { IRequestOptions, IRequests, IResponse } from \"../platform/requests\";\r\nimport { StreamingError } from \"../errors\";\r\nimport { defaultHeaders } from \"../utils/http\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport default class Requestor implements IRequestor {\r\n  private readonly headers: Record<string, string>;\r\n\r\n  private readonly uri: string;\r\n\r\n  constructor(\r\n    sdkKey: string,\r\n    config: Configuration,\r\n    info: IInfo,\r\n    private readonly requests: IRequests,\r\n  ) {\r\n    this.headers = defaultHeaders(sdkKey, info);\r\n    this.uri = config.pollingUri;\r\n  }\r\n\r\n  /**\r\n   * Perform a request and utilize the ETag cache. The ETags are cached in the\r\n   * requestor instance.\r\n   */\r\n  private async request(\r\n    requestUrl: string,\r\n    options: IRequestOptions,\r\n  ): Promise<{\r\n    res: IResponse;\r\n    body: string;\r\n  }> {\r\n    const res = await this.requests.fetch(requestUrl, options);\r\n\r\n    const body = await res.text();\r\n\r\n    return {res, body};\r\n  }\r\n\r\n  async requestData(timestamp: number, payload: any, cb: (err: any, body: any) => void) {\r\n    const options: IRequestOptions = {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify(payload)\r\n    };\r\n    try {\r\n      const {res, body} = await this.request(`${ this.uri }?timestamp=${ timestamp ?? 0 }`, options);\r\n      if (res.status !== 200 && res.status !== 304) {\r\n        const err = new StreamingError(`Unexpected status code: ${ res.status }`, res.status);\r\n        return cb(err, undefined);\r\n      }\r\n      return cb(undefined, res.status === 304 ? null : body);\r\n    } catch (err) {\r\n      return cb(err, undefined);\r\n    }\r\n  }\r\n}\r\n","import { IDataSynchronizer } from \"./IDataSynchronizer\";\r\nimport ClientContext from \"../options/ClientContext\";\r\nimport { EventName, ProcessStreamResponse } from \"./types\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\nimport { IWebSocketWithEvents } from \"../platform/IWebSocket\";\r\nimport { IUser } from \"../options/IUser\";\r\n\r\nclass WebSocketDataSynchronizer implements IDataSynchronizer {\r\n  private socket?: IWebSocketWithEvents;\r\n  private readonly logger?: ILogger;\r\n\r\n  private connectionAttemptStartTime?: number;\r\n\r\n  constructor(\r\n    sdkKey: string,\r\n    user: IUser,\r\n    clientContext: ClientContext,\r\n    socket: IWebSocketWithEvents,\r\n    private readonly getStoreTimestamp: () => number,\r\n    private readonly listeners: Map<EventName, ProcessStreamResponse>,\r\n    webSocketPingInterval: number\r\n  ) {\r\n    const {logger, streamingUri} = clientContext;\r\n\r\n    this.logger = logger;\r\n    this.socket = socket;\r\n    this.socket.config({\r\n      sdkKey,\r\n      streamingUri,\r\n      pingInterval: webSocketPingInterval,\r\n      user,\r\n      logger,\r\n      getStoreTimestamp\r\n    });\r\n\r\n    this.listeners.forEach(({deserializeData, processJson}, eventName) => {\r\n      this.socket?.addListener(eventName, (event) => {\r\n        this.logger?.debug(`Received ${ eventName } event`);\r\n\r\n        if (event?.data) {\r\n          const {featureFlags, userKeyId} = event.data;\r\n          const data = deserializeData(featureFlags);\r\n          processJson(userKeyId, data);\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  identify(user: IUser): void {\r\n    this.socket?.identify(user);\r\n  }\r\n\r\n  start(): void {\r\n    this.logConnectionStarted();\r\n\r\n    this.socket?.connect();\r\n  }\r\n\r\n  private logConnectionStarted() {\r\n    this.connectionAttemptStartTime = Date.now();\r\n    this.logger?.info(`Stream connection attempt StartTime ${ this.connectionAttemptStartTime }`);\r\n  }\r\n\r\n  close(): void {\r\n    this.stop();\r\n  }\r\n\r\n  stop(): void {\r\n    this.socket?.close();\r\n    this.socket = undefined;\r\n  }\r\n}\r\n\r\nexport default WebSocketDataSynchronizer;","export * from './DataSyncMode';\r\nexport * from './IDataSynchronizer';\r\nexport * from './IRequestor';\r\nexport * from './NullDataSynchronizer';\r\nexport * from './PollingDataSynchronizer';\r\nexport * from './Requestor';\r\nexport * from './types';\r\nexport * from './utils';\r\nexport * from './WebSocketDataSynchronizer';","import { PollingError } from \"../errors\";\r\nimport { IFlag } from \"../evaluation/data/IFlag\";\r\n\r\nexport type PollingErrorHandler = (err: PollingError) => void;\r\n\r\nexport enum StreamResponseEventType {\r\n  full = 'full',\r\n  patch = 'patch'\r\n}\r\n\r\nexport interface IStreamResponse {\r\n  eventType: StreamResponseEventType,\r\n  featureFlags: IFlag[]\r\n}\r\n\r\nexport type EventName = 'delete' | 'patch' | 'ping' | 'put';\r\nexport type ProcessStreamResponse = {\r\n  deserializeData: (flags: IFlag[]) => any;\r\n  processJson: (userKeyId: string, json: any) => void;\r\n};","/********************** encode text begin *****************************/\r\nconst alphabet: Record<string, string> = {\r\n  \"0\": \"Q\",\r\n  \"1\": \"B\",\r\n  \"2\": \"W\",\r\n  \"3\": \"S\",\r\n  \"4\": \"P\",\r\n  \"5\": \"H\",\r\n  \"6\": \"D\",\r\n  \"7\": \"X\",\r\n  \"8\": \"Z\",\r\n  \"9\": \"U\",\r\n}\r\n\r\nfunction encodeNumber(param: number, length: number): string {\r\n  var s = \"000000000000\" + param;\r\n  const numberWithLeadingZeros = s.slice(s.length - length);\r\n  return numberWithLeadingZeros.split('').map(n => alphabet[n]).join('');\r\n}\r\n\r\n// generate connection token\r\nexport function generateConnectionToken(text: string): string {\r\n  text = text.replace(/=*$/, '');\r\n  const timestamp = Date.now();\r\n  const timestampCode = encodeNumber(timestamp, timestamp.toString().length);\r\n  // get random number less than the length of the text as the start point, and it must be greater or equal to 2\r\n  const start = Math.max(Math.floor(Math.random() * text.length), 2);\r\n\r\n  return `${ encodeNumber(start, 3) }${ encodeNumber(timestampCode.length, 2) }${ text.slice(0, start) }${ timestampCode }${ text.slice(start) }`;\r\n}\r\n\r\n/********************** encode text end *****************************/","export class PollingError extends Error {\r\n  public readonly status?: number;\r\n\r\n  constructor(message: string, status?: number) {\r\n    super(message);\r\n    this.status = status;\r\n    this.name = 'FbPollingError';\r\n  }\r\n}\r\n\r\nexport class StreamingError extends Error {\r\n  public readonly code?: number;\r\n\r\n  constructor(message: string, code?: number) {\r\n    super(message);\r\n    this.code = code;\r\n    this.name = 'FbStreamingError';\r\n  }\r\n}\r\n\r\nexport class UnexpectedResponseError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'FbUnexpectedResponseError';\r\n  }\r\n}\r\n\r\n\r\nexport class ClientError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'FbClientError';\r\n  }\r\n}\r\n\r\nexport class TimeoutError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'FeatBitTimeoutError';\r\n  }\r\n}\r\n\r\nexport function isHttpRecoverable(status: number) {\r\n  if (status >= 400 && status < 500) {\r\n    return status === 400 || status === 408 || status === 429;\r\n  }\r\n  return true;\r\n}","import { ReasonKinds } from \"./ReasonKinds\";\r\nimport { IFlag } from \"./data/IFlag\";\r\nimport { EvalEvent } from \"../events/event\";\r\nimport { IUser } from \"../options/IUser\";\r\n\r\n/**\r\n * A class which encapsulates the result of an evaluation. It allows for differentiating between\r\n * successful and error result types.\r\n *\r\n * @internal\r\n */\r\nexport default class EvalResult {\r\n  protected constructor(\r\n    public kind: ReasonKinds,\r\n    public value: IFlag | null,\r\n    public reason?: string,\r\n  ) {\r\n  }\r\n\r\n  static flagNotFound(flagKey: string) {\r\n    return new EvalResult(ReasonKinds.FlagNotFound, null, `flag not found: ${ flagKey }`);\r\n  }\r\n\r\n  static matched(val: IFlag) {\r\n    return new EvalResult(ReasonKinds.Match, val, 'target match');\r\n  }\r\n\r\n  toEvalEvent(user: IUser): EvalEvent | null {\r\n    if (this.kind !== ReasonKinds.Match) {\r\n      return null;\r\n    }\r\n\r\n    const targetedVariation = this.value?.variations.find(v => v.value === this.value?.variation);\r\n    return new EvalEvent(user, this.value?.id!, targetedVariation!, this.value?.sendToExperiment!);\r\n  }\r\n}","import { IFlag } from \"./data/IFlag\";\r\nimport EvalResult from \"./EvalResult\";\r\nimport { IStore } from \"../platform/IStore\";\r\nimport DataKinds from \"../store/DataKinds\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport default class Evaluator {\r\n  constructor(private store: IStore) {\r\n  }\r\n\r\n  /**\r\n   * Evaluate the given flag against the given context.\r\n   * @param flagKey The key of the feature flag.\r\n   */\r\n  evaluate(\r\n    flagKey: string,\r\n  ): EvalResult {\r\n    const flag = this.store.get(DataKinds.Flags, flagKey) as unknown as IFlag;\r\n    if (!flag) {\r\n      return EvalResult.flagNotFound(flagKey);\r\n    }\r\n\r\n    return EvalResult.matched(flag);\r\n  }\r\n}","/**\r\n * Different kinds of error which may be encountered during evaluation.\r\n */\r\nexport enum ReasonKinds {\r\n  ClientNotReady = 'ClientNotReady',\r\n  Match = 'Match',\r\n  WrongType = 'WrongType',\r\n  FlagNotFound = 'FlagNotFound',\r\n  Error = 'Error'\r\n}","export type FlagValue = any;\r\n\r\nexport enum VariationDataType {\r\n  string = 'string',\r\n  boolean = 'boolean',\r\n  number = 'number',\r\n  json = 'json',\r\n  empty = ''\r\n}\r\n\r\nexport interface IVariation {\r\n  id: number,\r\n  value: FlagValue\r\n}\r\n\r\nexport interface IFlagBase {\r\n  id: string, // the key\r\n  variation: FlagValue,\r\n  variationType: VariationDataType,\r\n  sendToExperiment?: boolean,\r\n  timestamp?: number,\r\n  variationOptions?: IVariation[],\r\n}\r\n\r\nexport interface IFlag extends IFlagBase {\r\n  key: string, // the same value to id\r\n  variations: IVariation[],// the same value to variationOptions\r\n  version: number\r\n}\r\n","export * from './IFlag';","export * from './data';\r\nexport * from './EvalResult';\r\nexport * from './Evaluator';\r\nexport * from './IEvalDetail';\r\nexport * from './ReasonKinds';","import { IEventProcessor } from \"./IEventProcessor\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport ClientContext from \"../options/ClientContext\";\r\nimport { FlushEvent, IEvent, ShutdownEvent } from \"./event\";\r\nimport { isNullOrUndefined } from \"../utils/isNullOrUndefined\";\r\nimport { IEventQueue } from \"./IEventQueue\";\r\nimport { DefaultEventQueue } from \"./DefaultEventQueue\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\n\r\nexport class DefaultEventProcessor implements IEventProcessor {\r\n  private readonly logger: ILogger;\r\n  private readonly flushInterval: number;\r\n  private readonly eventDispatcher: EventDispatcher;\r\n  private readonly eventQueue: IEventQueue;\r\n  private closed: boolean = false;\r\n\r\n  constructor(clientContext: ClientContext) {\r\n    const {logger, flushInterval, maxEventsInQueue} = clientContext;\r\n    this.logger = logger!;\r\n    this.flushInterval = flushInterval;\r\n    this.eventQueue = new DefaultEventQueue(maxEventsInQueue, this.logger);\r\n    this.eventDispatcher = new EventDispatcher(clientContext, this.eventQueue);\r\n\r\n    this.flushLoop();\r\n  }\r\n\r\n  private flushLoop() {\r\n    if (this.closed) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(async () => {\r\n      try {\r\n        await this.flush();\r\n      } catch (err) {\r\n        this.logger.error('Unexpected error while flushing events in event processor.', err);\r\n      }\r\n\r\n      this.flushLoop();\r\n    }, this.flushInterval);\r\n  }\r\n\r\n  flush(): Promise<any> {\r\n    const flushEvent = new FlushEvent();\r\n    this.record(flushEvent);\r\n    return flushEvent.waitForCompletion();\r\n  }\r\n\r\n  async close(): Promise<void> {\r\n    if (this.closed) {\r\n      return;\r\n    }\r\n\r\n    // send a shutdown event to dispatcher\r\n    const shutdown = new ShutdownEvent();\r\n    this.record(shutdown);\r\n\r\n    try {\r\n      await shutdown.waitForCompletion();\r\n    } catch (err) {\r\n      this.logger.error('Event processor shutdown but not complete.');\r\n    }\r\n\r\n    // mark the event queue as complete for adding\r\n    this.eventQueue.close();\r\n    this.closed = true;\r\n  }\r\n\r\n  record(event: IEvent | null): boolean {\r\n    if (isNullOrUndefined(event)) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.eventQueue.addEvent(event!)) {\r\n      if (event instanceof FlushEvent) {\r\n        event.complete();\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}","import { IEventQueue } from \"./IEventQueue\";\r\nimport { IEvent } from \"./event\";\r\nimport { ILogger } from \"../logging/ILogger\";\r\n\r\nexport class DefaultEventQueue implements IEventQueue {\r\n  private events: IEvent[];\r\n  private closed: boolean = false;\r\n\r\n  constructor(private readonly capacity: number, private readonly logger: ILogger) {\r\n    this.events = [];\r\n  }\r\n\r\n  addEvent(event: IEvent): boolean {\r\n    if (this.closed) {\r\n      return false;\r\n    }\r\n\r\n    if (this.events.length >= this.capacity) {\r\n      this.logger.warn(\"Events are being produced faster than they can be processed. We shouldn't see this.\");\r\n      return false;\r\n    }\r\n\r\n    this.events.push(event);\r\n    return true;\r\n  }\r\n\r\n  clear(): void {\r\n    this.events = [];\r\n  }\r\n\r\n  shift(): IEvent | undefined {\r\n    return this.events.shift();\r\n  }\r\n\r\n  close(): void {\r\n    this.closed = true;\r\n  }\r\n\r\n  get eventsSnapshot(): IEvent[] {\r\n    return [...this.events];\r\n  }\r\n\r\n  get length(): number {\r\n    return this.events.length;\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return this.length === 0;\r\n  }\r\n}","import { DeliveryStatus, IEventSender, IEventSenderResult } from \"./IEventSender\";\r\nimport ClientContext from \"../options/ClientContext\";\r\nimport { defaultHeaders, httpErrorMessage } from \"../utils/http\";\r\nimport { IRequests } from \"../platform/requests\";\r\nimport { isHttpRecoverable, UnexpectedResponseError } from \"../errors\";\r\nimport sleep from \"../utils/sleep\";\r\n\r\nexport class DefaultEventSender implements IEventSender {\r\n  private readonly defaultHeaders: {\r\n    [key: string]: string;\r\n  };\r\n  private readonly eventsUri: string;\r\n  private requests: IRequests;\r\n\r\n  constructor(clientContext: ClientContext) {\r\n    const {\r\n      sdkKey,\r\n      eventsUri,\r\n      platform\r\n    } = clientContext;\r\n\r\n    const {info, requests} = platform;\r\n    this.defaultHeaders = defaultHeaders(sdkKey, info);\r\n    this.eventsUri = eventsUri;\r\n    this.requests = requests;\r\n  }\r\n\r\n  async send(payload: string, retry: boolean): Promise<IEventSenderResult> {\r\n    const res: IEventSenderResult = {\r\n      status: DeliveryStatus.Succeeded,\r\n    };\r\n\r\n    const headers: Record<string, string> = {\r\n      ...this.defaultHeaders,\r\n    }\r\n\r\n    let error;\r\n    try {\r\n      const {status} = await this.requests.fetch(this.eventsUri, {\r\n        headers,\r\n        body: payload,\r\n        method: 'POST',\r\n      });\r\n\r\n      if (status >= 200 && status <= 299) {\r\n        return res;\r\n      }\r\n\r\n      error = new UnexpectedResponseError(\r\n        httpErrorMessage({status, message: 'some events were dropped'}, 'event posting'),\r\n      );\r\n\r\n      if (!isHttpRecoverable(status)) {\r\n        res.status = DeliveryStatus.FailedAndMustShutDown;\r\n        res.error = error;\r\n        return res;\r\n      }\r\n    } catch (err) {\r\n      error = err;\r\n    }\r\n\r\n    // recoverable but not retrying\r\n    if (error && !retry) {\r\n      res.status = DeliveryStatus.Failed;\r\n      res.error = error;\r\n      return res;\r\n    }\r\n\r\n    // wait 1 second before retrying\r\n    await sleep();\r\n\r\n    return this.send(payload, false);\r\n  }\r\n}","import { IEventSerializer } from \"./EventSerializer\";\r\nimport { EvalEvent, IEvent, MetricEvent } from \"./event\";\r\n\r\nexport class DefaultEventSerializer implements IEventSerializer {\r\n  serialize(events: IEvent[]): string {\r\n    const payload = events\r\n      .map(event => event instanceof EvalEvent || event instanceof MetricEvent ? event.toPayload() : null)\r\n      .filter(event => event !== null);\r\n\r\n    return JSON.stringify(payload);\r\n  }\r\n}","import { ILogger } from \"../logging/ILogger\";\r\nimport ClientContext from \"../options/ClientContext\";\r\nimport { DeliveryStatus, IEventSender } from \"./IEventSender\";\r\nimport { IEventQueue } from \"./IEventQueue\";\r\nimport { DefaultEventQueue } from \"./DefaultEventQueue\";\r\nimport { DefaultEventSender } from \"./DefaultEventSender\";\r\nimport { AsyncEvent, FlushEvent, IEvent, PayloadEvent, ShutdownEvent } from \"./event\";\r\nimport { IEventSerializer } from \"./EventSerializer\";\r\nimport { DefaultEventSerializer } from \"./DefaultEventSerializer\";\r\nimport sleep from \"../utils/sleep\";\r\n\r\nexport class EventDispatcher {\r\n  private readonly logger: ILogger;\r\n  private sender: IEventSender;\r\n  private buffer: IEventQueue;\r\n  private serializer: IEventSerializer;\r\n\r\n  private maxEventPerRequest = 50;\r\n  private stopped: boolean = false;\r\n\r\n  constructor(clientContext: ClientContext, queue: IEventQueue) {\r\n    const {logger, maxEventsInQueue} = clientContext;\r\n    this.logger = logger!;\r\n\r\n    this.buffer = new DefaultEventQueue(maxEventsInQueue, this.logger);\r\n    this.sender = new DefaultEventSender(clientContext);\r\n    this.serializer = new DefaultEventSerializer();\r\n\r\n    this.dispatchLoop(queue).then();\r\n  }\r\n\r\n  private async dispatchLoop(queue: IEventQueue) {\r\n    this.logger.debug('Start dispatch loop.');\r\n\r\n    let running = true;\r\n    while (running) {\r\n      try {\r\n        const event = queue.shift();\r\n\r\n        if (event === undefined) {\r\n          await sleep(1000);\r\n          continue;\r\n        }\r\n\r\n        if (event instanceof PayloadEvent) {\r\n          this.addEventToBuffer(event);\r\n        } else if (event instanceof FlushEvent) {\r\n          await this.triggerFlush(event);\r\n        } else if (event instanceof ShutdownEvent) {\r\n          await this.triggerFlush(event);\r\n          this.stopped = true;\r\n          running = false;\r\n        }\r\n      } catch (err) {\r\n        this.logger.error('Unexpected error in event dispatcher.', err);\r\n      }\r\n    }\r\n\r\n    this.logger.debug('Finish dispatch loop.');\r\n  }\r\n\r\n  private addEventToBuffer(event: IEvent) {\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    if (this.buffer.addEvent(event)) {\r\n      this.logger.debug('Added event to buffer.');\r\n    } else {\r\n      this.logger.warn('Exceeded event queue capacity, event will be dropped. Increase capacity to avoid dropping events.');\r\n    }\r\n  }\r\n\r\n  private async triggerFlush(event: AsyncEvent) {\r\n    if (this.stopped) {\r\n      event.complete();\r\n      return;\r\n    }\r\n\r\n    if (this.buffer.isEmpty) {\r\n      event.complete();\r\n      this.logger.debug('Flush empty buffer.');\r\n      // There are no events to flush. If we don't complete the message, then the async task may never\r\n      // complete (if it had a non-zero positive timeout, then it would complete after the timeout).\r\n      return;\r\n    }\r\n\r\n    const snapshot = this.buffer.eventsSnapshot;\r\n    this.buffer.clear();\r\n    try {\r\n      await this.flushEvents(snapshot);\r\n      this.logger.debug(`${ snapshot.length } events has been flushed.`);\r\n    } catch (err) {\r\n      this.logger.warn('Exception happened when flushing events', err);\r\n    }\r\n\r\n    event.complete();\r\n  }\r\n\r\n  private async flushEvents(events: IEvent[]) {\r\n    events = this.getUniqueEvents(events);\r\n    const total = events.length;\r\n    for (let i = 0; i < total; i += this.maxEventPerRequest) {\r\n      const length = Math.min(this.maxEventPerRequest, total - i);\r\n      const slice = events.slice(i, i + length);\r\n      const payload = this.serializer.serialize(slice);\r\n\r\n      const {status} = await this.sender.send(payload, true);\r\n      if (status === DeliveryStatus.FailedAndMustShutDown) {\r\n        this.stopped = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  private getUniqueEvents(events: IEvent[]): IEvent[] {\r\n    const uniqueEvents: IEvent[] = [];\r\n    const hashes: string[] = [];\r\n\r\n    for (const event of events) {\r\n      if (!hashes.includes(event.hash)) {\r\n        uniqueEvents.push(event);\r\n        hashes.push(event.hash);\r\n      }\r\n    }\r\n\r\n    return uniqueEvents;\r\n  }\r\n}","export enum DeliveryStatus {\r\n  Succeeded,\r\n  Failed,\r\n  FailedAndMustShutDown\r\n}\r\n\r\nexport interface IEventSenderResult {\r\n  status: DeliveryStatus,\r\n  error?: any\r\n}\r\n\r\nexport interface IEventSender {\r\n  send(payload: string, retry: boolean): Promise<IEventSenderResult>;\r\n}","import { IEventProcessor } from \"./IEventProcessor\";\r\nimport { IEvent } from \"./event\";\r\n\r\nexport class NullEventProcessor implements IEventProcessor {\r\n  flush(): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  close(): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  record(event: IEvent | null): boolean {\r\n    return false;\r\n  }\r\n}","import { IUser } from \"../options/IUser\";\r\nimport { IVariation } from \"../evaluation/data/IFlag\";\r\n\r\nexport interface IEvent {\r\n  hash: string;\r\n}\r\n\r\nexport class AsyncEvent implements IEvent {\r\n  private readonly isCompletedPromise?: Promise<AsyncEvent>;\r\n  private resolveFn?: (value: AsyncEvent) => void;\r\n  timestamp = (new Date()).getTime();\r\n\r\n  get hash(): string {\r\n    return this.timestamp.toString();\r\n  }\r\n\r\n  constructor() {\r\n    this.isCompletedPromise = new Promise<AsyncEvent>((resolve) => {\r\n      this.resolveFn = resolve;\r\n    });\r\n  }\r\n\r\n  waitForCompletion(): Promise<AsyncEvent> {\r\n    return this.isCompletedPromise!;\r\n  }\r\n\r\n  complete() {\r\n    this.resolveFn?.(this);\r\n  }\r\n}\r\n\r\nexport class FlushEvent extends AsyncEvent {\r\n}\r\n\r\nexport class ShutdownEvent extends AsyncEvent {\r\n}\r\n\r\nexport class PayloadEvent implements IEvent {\r\n  timestamp = (new Date()).getTime();\r\n\r\n  get hash(): string {\r\n    return this.timestamp.toString();\r\n  }\r\n\r\n  toPayload(): any {\r\n  };\r\n}\r\n\r\nexport class MetricEvent extends PayloadEvent {\r\n  constructor(\r\n    public user: IUser,\r\n    public eventName: string,\r\n    public appType: string,\r\n    public metricValue: number\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  private userPayload() {\r\n    return {\r\n      keyId: this.user.keyId,\r\n      name: this.user.name,\r\n      customizedProperties: this.user.customizedProperties\r\n    }\r\n  }\r\n\r\n  toPayload(): any {\r\n    return {\r\n      user: this.userPayload(),\r\n      metrics: [{\r\n        route: 'index/metric',\r\n        timestamp: this.timestamp,\r\n        numericValue: this.metricValue,\r\n        appType: this.appType,\r\n        eventName: this.eventName,\r\n        type: 'CustomEvent'\r\n      }]\r\n    }\r\n  }\r\n\r\n  get hash(): string {\r\n    const payload = this.toPayload();\r\n    const hasObject = {\r\n      user: payload.user,\r\n      metrics: payload.metrics.map((m: any) => ({...m, timestamp: undefined}))\r\n    }\r\n    return JSON.stringify(hasObject);\r\n  }\r\n}\r\n\r\nexport class EvalEvent extends PayloadEvent {\r\n  constructor(\r\n    public user: IUser,\r\n    public flagKey: string,\r\n    public variation: IVariation,\r\n    public sendToExperiment: boolean\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  private userPayload() {\r\n    return {\r\n      keyId: this.user.keyId,\r\n      name: this.user.name,\r\n      customizedProperties: this.user.customizedProperties\r\n    }\r\n  }\r\n\r\n  toPayload(): any {\r\n    return {\r\n      user: this.userPayload(),\r\n      variations: [{\r\n        featureFlagKey: this.flagKey,\r\n        sendToExperiment: this.sendToExperiment,\r\n        timestamp: this.timestamp,\r\n        variation: this.variation\r\n      }]\r\n    }\r\n  }\r\n\r\n  get hash(): string {\r\n    const payload = this.toPayload();\r\n    const hasObject = {\r\n      user: payload.user,\r\n      variations: payload.variations.map((m: any) => ({...m, timestamp: undefined}))\r\n    }\r\n\r\n    return JSON.stringify(hasObject);\r\n  }\r\n}","export * from './DefaultEventProcessor';\r\nexport * from './DefaultEventQueue';\r\nexport * from './DefaultEventSender';\r\nexport * from './DefaultEventSerializer';\r\nexport * from './event';\r\nexport * from './EventDispatcher';\r\nexport * from './EventSerializer';\r\nexport * from './IEventProcessor';\r\nexport * from './IEventQueue';\r\nexport * from './IEventSender';\r\nexport * from './NullEventProcessor';\r\n","export * from './bootstrap';\r\nexport * from './data-sources';\r\nexport * from './evaluation';\r\nexport * from './events';\r\nexport * from './logging';\r\nexport * from './options';\r\nexport * from './platform';\r\nexport * from './store';\r\nexport * from './data-sync';\r\nexport * from './utils';\r\n\r\nexport * from './Configuration';\r\nexport * from './constants';\r\nexport * from './Context';\r\nexport * from './errors';\r\nexport * from './FbClientBuilder';\r\nexport * from './IContextProperty';\r\nexport * from './IDataKind';\r\nexport * from './IFbClient';\r\nexport * from './IVersionedData';\r\nexport * from './FbClientCore';\r\n","import format from './format';\r\nimport { ILogger } from \"./ILogger\";\r\nimport { IBasicLoggerOptions } from \"./IBasicLoggerOptions\";\r\n\r\nconst LogPriority = {\r\n  debug: 0,\r\n  info: 1,\r\n  warn: 2,\r\n  error: 3,\r\n  none: 4,\r\n};\r\n\r\nconst LevelNames = ['debug', 'info', 'warn', 'error', 'none'];\r\n\r\n/**\r\n * A basic logger which handles filtering by level.\r\n *\r\n * With the default options it will write to `console.error`\r\n * and it will use the formatting provided by `console.error`.\r\n * If the destination is overwritten, then it will use an included\r\n * formatter similar to `util.format`.\r\n *\r\n * If a formatter is available, then that should be overridden\r\n * as well for performance.\r\n */\r\nexport class BasicLogger implements ILogger {\r\n  private logLevel: number;\r\n\r\n  private name: string;\r\n\r\n  private destination?: (line: string) => void;\r\n\r\n  private formatter?: (...args: any[]) => string;\r\n\r\n  /**\r\n   * This should only be used as a default fallback and not as a convenient\r\n   * solution. In most cases you should construct a new instance with the\r\n   * appropriate options for your specific needs.\r\n   */\r\n  static get() {\r\n    return new BasicLogger({});\r\n  }\r\n\r\n  constructor(options: IBasicLoggerOptions) {\r\n    this.logLevel = LogPriority[options.level ?? 'info'] ?? LogPriority.info;\r\n    this.name = options.name ?? 'FeatBit';\r\n    // eslint-disable-next-line no-console\r\n    this.destination = options.destination;\r\n    this.formatter = options.formatter;\r\n  }\r\n\r\n  private tryFormat(...args: any[]): string {\r\n    try {\r\n      if (this.formatter) {\r\n        // In case the provided formatter fails.\r\n        return this.formatter?.(...args);\r\n      }\r\n      return format(...args);\r\n    } catch {\r\n      return format(...args);\r\n    }\r\n  }\r\n\r\n  private tryWrite(msg: string) {\r\n    try {\r\n      this.destination!(msg);\r\n    } catch {\r\n      // eslint-disable-next-line no-console\r\n      console.error(msg);\r\n    }\r\n  }\r\n\r\n  private log(level: number, args: any[]) {\r\n    if (level >= this.logLevel) {\r\n      const prefix = `${ LevelNames[level] }: [${ this.name }]`;\r\n      try {\r\n        if (this.destination) {\r\n          this.tryWrite(`${ prefix } ${ this.tryFormat(...args) }`);\r\n        } else {\r\n          // `console.error` has its own formatter.\r\n          // So we don't need to do anything.\r\n          // eslint-disable-next-line no-console\r\n          console.error(...args);\r\n        }\r\n      } catch {\r\n        // If all else fails do not break.\r\n        // eslint-disable-next-line no-console\r\n        console.error(...args);\r\n      }\r\n    }\r\n  }\r\n\r\n  error(...args: any[]): void {\r\n    this.log(LogPriority.error, args);\r\n  }\r\n\r\n  warn(...args: any[]): void {\r\n    this.log(LogPriority.warn, args);\r\n  }\r\n\r\n  info(...args: any[]): void {\r\n    this.log(LogPriority.info, args);\r\n  }\r\n\r\n  debug(...args: any[]): void {\r\n    this.log(LogPriority.debug, args);\r\n  }\r\n}\r\n","import { ILogger } from \"./ILogger\";\r\nimport { TypeValidators } from \"../options/Validators\";\r\n\r\nconst loggerRequirements = {\r\n  error: TypeValidators.Function,\r\n  warn: TypeValidators.Function,\r\n  info: TypeValidators.Function,\r\n  debug: TypeValidators.Function,\r\n};\r\n\r\n/**\r\n * The safeLogger logic exists because we allow the application to pass in a custom logger, but\r\n * there is no guarantee that the logger works correctly and if it ever throws exceptions there\r\n * could be serious consequences (e.g. an uncaught exception within an error event handler, due\r\n * to the SDK trying to log the error, can terminate the application). An exception could result\r\n * from faulty logic in the logger implementation, or it could be that this is not a logger at\r\n * all but some other kind of object; the former is handled by a catch block that logs an error\r\n * message to the SDK's default logger, and we can at least partly guard against the latter by\r\n * checking for the presence of required methods at configuration time.\r\n */\r\nexport class SafeLogger implements ILogger {\r\n  private logger: ILogger;\r\n\r\n  private fallback: ILogger;\r\n\r\n  /**\r\n   * Construct a safe logger with the specified logger.\r\n   * @param logger The logger to use.\r\n   * @param fallback A fallback logger to use in case an issue is  encountered using\r\n   * the provided logger.\r\n   */\r\n  constructor(logger: ILogger, fallback: ILogger) {\r\n    Object.entries(loggerRequirements).forEach(([level, validator]) => {\r\n      if (!validator.is((logger as any)[level])) {\r\n        throw new Error(`Provided logger instance must support logger.${ level }(...) method`);\r\n        // Note that the SDK normally does not throw exceptions to the application, but that rule\r\n        // does not apply to FbClientNode.init() which will throw an exception if the parameters are so\r\n        // invalid that we cannot proceed with creating the client. An invalid logger meets those\r\n        // criteria since the SDK calls the logger during nearly all of its operations.\r\n      }\r\n    });\r\n    this.logger = logger;\r\n    this.fallback = fallback;\r\n  }\r\n\r\n  private log(level: 'error' | 'warn' | 'info' | 'debug', args: any[]) {\r\n    try {\r\n      this.logger[level](...args);\r\n    } catch {\r\n      // If all else fails do not break.\r\n      this.fallback[level](...args);\r\n    }\r\n  }\r\n\r\n  error(...args: any[]): void {\r\n    this.log('error', args);\r\n  }\r\n\r\n  warn(...args: any[]): void {\r\n    this.log('warn', args);\r\n  }\r\n\r\n  info(...args: any[]): void {\r\n    this.log('info', args);\r\n  }\r\n\r\n  debug(...args: any[]): void {\r\n    this.log('debug', args);\r\n  }\r\n}","import { TypeValidators } from \"../options/Validators\";\r\n\r\n\r\n/**\r\n * Attempt to produce a string representation of a value.\r\n * The format should be roughly comparable to `util.format`\r\n * aside from object which will be JSON versus the `util.inspect`\r\n * format.\r\n * @param val\r\n * @returns A string representation of the value if possible.\r\n */\r\nfunction tryStringify(val: any) {\r\n  if (typeof val === 'string') {\r\n    return val;\r\n  }\r\n  if (val === undefined) {\r\n    return 'undefined';\r\n  }\r\n  if (val === null) {\r\n    return 'null';\r\n  }\r\n  if (Object.prototype.hasOwnProperty.call(val, 'toString')) {\r\n    try {\r\n      return val.toString();\r\n    } catch {\r\n      /* Keep going */\r\n    }\r\n  }\r\n\r\n  if (typeof val === 'bigint') {\r\n    return `${ val }n`;\r\n  }\r\n  try {\r\n    return JSON.stringify(val);\r\n  } catch (error) {\r\n    if (error instanceof TypeError && error.message.indexOf('circular') >= 0) {\r\n      return '[Circular]';\r\n    }\r\n    return '[Not Stringifiable]';\r\n  }\r\n}\r\n\r\n/**\r\n * Attempt to produce a numeric representation.\r\n * BigInts have an `n` suffix.\r\n * @param val\r\n * @returns The numeric representation or 'NaN' if not numeric.\r\n */\r\nfunction toNumber(val: any): string {\r\n  // Symbol has to be treated special because it will\r\n  // throw an exception if an attempt is made to convert it.\r\n  if (typeof val === 'symbol') {\r\n    return 'NaN';\r\n  }\r\n  if (typeof val === 'bigint') {\r\n    return `${ val }n`;\r\n  }\r\n  return String(Number(val));\r\n}\r\n\r\n/**\r\n * Attempt to produce an integer representation.\r\n * BigInts have an `n` suffix.\r\n * @param val\r\n * @returns The integer representation or 'NaN' if not numeric.\r\n */\r\nfunction toInt(val: any): string {\r\n  if (typeof val === 'symbol') {\r\n    return 'NaN';\r\n  }\r\n  if (typeof val === 'bigint') {\r\n    return `${ val }n`;\r\n  }\r\n  return String(parseInt(val, 10));\r\n}\r\n\r\n/**\r\n * Attempt to produce a float representation.\r\n * BigInts have an `n` suffix.\r\n * @param val\r\n * @returns The integer representation or 'NaN' if not numeric.\r\n */\r\nfunction toFloat(val: any): string {\r\n  if (typeof val === 'symbol') {\r\n    return 'NaN';\r\n  }\r\n  return String(parseFloat(val));\r\n}\r\n\r\n// Based on:\r\n// https://nodejs.org/api/util.html#utilformatformat-args\r\n// The result will not match browser exactly, but it should get the\r\n// right information through.\r\nconst escapes: Record<string, (val: any) => string> = {\r\n  s: (val: any) => tryStringify(val),\r\n  d: (val: any) => toNumber(val),\r\n  i: (val: any) => toInt(val),\r\n  f: (val: any) => toFloat(val),\r\n  j: (val: any) => tryStringify(val),\r\n  o: (val: any) => tryStringify(val),\r\n  O: (val: any) => tryStringify(val),\r\n  c: () => '',\r\n};\r\n\r\n/**\r\n * A basic formatted for use where `util.format` is not available.\r\n * This will not be as performant, but it will produce formatted\r\n * messages.\r\n *\r\n * @internal\r\n *\r\n * @param args\r\n * @returns Formatted string.\r\n */\r\nexport default function format(...args: any[]): string {\r\n  const formatString = args.shift();\r\n  if (TypeValidators.String.is(formatString)) {\r\n    let out = '';\r\n    let i = 0;\r\n    while (i < formatString.length) {\r\n      const char = formatString.charAt(i);\r\n      if (char === '%') {\r\n        const nextIndex = i + 1;\r\n        if (nextIndex < formatString.length) {\r\n          const nextChar = formatString.charAt(i + 1);\r\n          if (nextChar in escapes && args.length) {\r\n            const value = args.shift();\r\n            // This rule is for math.\r\n            // eslint-disable-next-line no-unsafe-optional-chaining\r\n            out += escapes[nextChar]?.(value);\r\n          } else if (nextChar === '%') {\r\n            out += '%';\r\n          } else {\r\n            out += `%${ nextChar }`;\r\n          }\r\n          i += 2;\r\n        }\r\n      } else {\r\n        out += char;\r\n        i += 1;\r\n      }\r\n    }\r\n    // If there are any args left after we exhaust the format string\r\n    // then just stick those on the end.\r\n    if (args.length) {\r\n      if (out.length) {\r\n        out += ' ';\r\n      }\r\n      out += args.map(tryStringify).join(' ');\r\n    }\r\n    return out;\r\n  }\r\n  return args.map(tryStringify).join(' ');\r\n}\r\n","export * from './BasicLogger';\r\nexport * from './format';\r\nexport * from './IBasicLoggerOptions';\r\nexport * from './ILogger';\r\nexport * from './LogLevel';\r\nexport * from './SafeLogger';","import { ILogger } from \"../logging/ILogger\";\r\nimport { IPlatform } from \"../platform/IPlatform\";\r\nimport { IClientContext } from \"./IClientContext\";\r\nimport { IUser } from \"./IUser\";\r\n\r\n/**\r\n * The client context provides basic configuration and platform support which are required\r\n * when building SDK components.\r\n */\r\nexport default class ClientContext implements IClientContext {\r\n  flushInterval: number;\r\n  maxEventsInQueue: number;\r\n  offline: boolean;\r\n  logger: ILogger;\r\n  eventsUri: string;\r\n  pollingUri: string;\r\n  streamingUri: string;\r\n\r\n  constructor(\r\n    public readonly sdkKey: string,\r\n    configuration: {\r\n      logger?: ILogger;\r\n      offline?: boolean;\r\n      flushInterval: number;\r\n      maxEventsInQueue: number;\r\n      streamingUri: string;\r\n      pollingUri: string;\r\n      eventsUri: string;\r\n    },\r\n    public readonly platform: IPlatform,\r\n  ) {\r\n    this.logger = configuration.logger!;\r\n    this.offline = configuration.offline!;\r\n    this.flushInterval = configuration.flushInterval;\r\n    this.maxEventsInQueue = configuration.maxEventsInQueue;\r\n    this.streamingUri = configuration.streamingUri;\r\n    this.pollingUri = configuration.pollingUri;\r\n    this.eventsUri = configuration.eventsUri;\r\n  }\r\n}","/**\r\n * Messages for issues which can be encountered from processing the configuration options.\r\n */\r\nexport default class OptionMessages {\r\n  static optionBelowMinimum(name: string, value: number, min: number): string {\r\n    return `Config option \"${ name }\" had invalid value of ${ value }, using minimum of ${ min } instead`;\r\n  }\r\n\r\n  static unknownOption(name: string): string {\r\n    return `Ignoring unknown config option \"${ name }\"`;\r\n  }\r\n\r\n  static wrongOptionType(name: string, expectedType: string, actualType: string): string {\r\n    return `Config option \"${ name }\" should be of type ${ expectedType }, got ${ actualType }, using default value`;\r\n  }\r\n\r\n  static wrongOptionTypeBoolean(name: string, actualType: string): string {\r\n    return `Config option \"${ name }\" should be a boolean, got ${ actualType }, converting to boolean`;\r\n  }\r\n\r\n  static partialEndpoint(name: string): string {\r\n    return `You have set custom uris without specifying the ${ name } URI; connections may not work properly`;\r\n  }\r\n\r\n  static mandatory(name: string): string {\r\n    return `${ name } is mandatory`;\r\n  }\r\n\r\n  static invalidOptionValue(name: string): string {\r\n    return `Invalid option value: ${ name }`;\r\n  }\r\n\r\n  static missingKeyInBootstrapValue(key: string): string {\r\n    return `Missing key \"${ key }\" in bootstrap value`;\r\n  }\r\n}","import { IUser } from \"./IUser\";\r\nimport {IContextProperty} from \"../IContextProperty\";\r\n\r\n/**\r\n * Creates an instance of the FeatBit user.\r\n *\r\n * @return\r\n *   The new {@link IUser} instance.\r\n */\r\nexport class UserBuilder {\r\n  private _keyId: string = '';\r\n  private _name: string = '';\r\n  private _custom: IContextProperty[] = [];\r\n\r\n  constructor(keyId: string) {\r\n    this._keyId = keyId;\r\n  }\r\n\r\n  name(name: string): UserBuilder {\r\n    this._name = name;\r\n    return this;\r\n  }\r\n\r\n  custom(propertyName: string, value: string): UserBuilder {\r\n    this._custom?.push({ name: propertyName, value: `${value}` });\r\n    return this;\r\n  }\r\n\r\n  build(): IUser {\r\n    return {\r\n      name: this._name,\r\n      keyId: this._keyId,\r\n      customizedProperties: this._custom\r\n    };\r\n  }\r\n}","/* eslint-disable class-methods-use-this */\r\n/* eslint-disable max-classes-per-file */\r\n\r\n// The classes here are static, but needs to be instantiated to\r\n// support the generic functionality. Which is why we do not care about using\r\n// `this`\r\n\r\n// These validators are also of trivial complexity, so we are allowing more than\r\n// one per file.\r\n\r\nimport OptionMessages from \"./OptionMessages\";\r\nimport { IFlagBase } from \"../evaluation\";\r\n\r\n/**\r\n * Interface for type validation.\r\n */\r\nexport interface TypeValidator {\r\n  // holding validation error messages\r\n  messages?: string[];\r\n\r\n  is(u: unknown): boolean;\r\n\r\n  getType(): string;\r\n}\r\n\r\n/**\r\n * Validate a factory or instance.\r\n */\r\nexport class FactoryOrInstance implements TypeValidator {\r\n  is(factoryOrInstance: unknown) {\r\n    if (Array.isArray(factoryOrInstance)) {\r\n      return false;\r\n    }\r\n    const anyFactory = factoryOrInstance as any;\r\n    const typeOfFactory = typeof anyFactory;\r\n    return typeOfFactory === 'function' || typeOfFactory === 'object';\r\n  }\r\n\r\n  getType(): string {\r\n    return 'factory method or object';\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a basic type.\r\n */\r\nexport class Type<T> implements TypeValidator {\r\n  private typeName: string;\r\n\r\n  protected typeOf: string;\r\n\r\n  constructor(typeName: string, example: T) {\r\n    this.typeName = typeName;\r\n    this.typeOf = typeof example;\r\n  }\r\n\r\n  is(u: unknown): u is T {\r\n    if (Array.isArray(u)) {\r\n      return false;\r\n    }\r\n    return typeof u === this.typeOf;\r\n  }\r\n\r\n  getType(): string {\r\n    return this.typeName;\r\n  }\r\n}\r\n\r\n/**\r\n * Validate an array of the specified type.\r\n *\r\n * This does not validate instances of types. All class instances\r\n * of classes will simply objects.\r\n */\r\nexport class TypeArray<T> implements TypeValidator {\r\n  private typeName: string;\r\n\r\n  protected typeOf: string;\r\n\r\n  constructor(typeName: string, example: T) {\r\n    this.typeName = typeName;\r\n    this.typeOf = typeof example;\r\n  }\r\n\r\n  is(u: unknown): u is T {\r\n    if (Array.isArray(u)) {\r\n      if (u.length > 0) {\r\n        return u.every((val) => typeof val === this.typeOf);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getType(): string {\r\n    return this.typeName;\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a value is a number and is greater or eval than a minimum.\r\n */\r\nexport class NumberWithMinimum extends Type<number> {\r\n  readonly min: number;\r\n\r\n  constructor(min: number) {\r\n    super(`number with minimum value of ${ min }`, 0);\r\n    this.min = min;\r\n  }\r\n\r\n  override is(u: unknown): u is number {\r\n    return typeof u === this.typeOf && (u as number) >= this.min;\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a value is a string and it matches the given expression.\r\n */\r\nexport class StringMatchingRegex extends Type<string> {\r\n  readonly expression: RegExp;\r\n\r\n  constructor(expression: RegExp) {\r\n    super(`string matching ${ expression }`, '');\r\n    this.expression = expression;\r\n  }\r\n\r\n  override is(u: unknown): u is string {\r\n    return !!(u as string).match(this.expression);\r\n  }\r\n}\r\n\r\n/**\r\n * Validate a value is a function.\r\n */\r\nexport class Function implements TypeValidator {\r\n  is(u: unknown): u is (...args: any[]) => void {\r\n    // We cannot inspect the parameters and there isn't really\r\n    // a generic function type we can instantiate.\r\n    // So the type guard is here just to make TS comfortable\r\n    // calling something after using this guard.\r\n    return typeof u === 'function';\r\n  }\r\n\r\n  getType(): string {\r\n    return 'function';\r\n  }\r\n}\r\n\r\nexport class NullableBoolean implements TypeValidator {\r\n  is(u: unknown): boolean {\r\n    return typeof u === 'boolean' || typeof u === 'undefined' || u === null;\r\n  }\r\n\r\n  getType(): string {\r\n    return 'boolean | undefined | null';\r\n  }\r\n}\r\n\r\nexport class BootstrapValidator implements TypeValidator {\r\n  messages: string[] = [];\r\n\r\n  is(u: unknown): boolean {\r\n    if (typeof u !== 'object' || u === null) {\r\n      this.messages.push(OptionMessages.invalidOptionValue('bootstrap'));\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const bootstrap = u as IFlagBase[];\r\n      for (let flag of bootstrap) {\r\n        const hasMandatoryKeys = ['id', 'variation'].every((key) => Object.keys(flag).includes(key));\r\n        const keys = Object.keys(flag);\r\n\r\n        if (keys.includes('id')) {\r\n          this.messages.push(OptionMessages.missingKeyInBootstrapValue('id'));\r\n        }\r\n\r\n        if (keys.includes('variation')) {\r\n          this.messages.push(OptionMessages.missingKeyInBootstrapValue('variation'));\r\n        }\r\n\r\n        if (this.messages.length > 0) {\r\n          return false;\r\n        }\r\n      }\r\n    } catch (_) {\r\n      this.messages.push(OptionMessages.wrongOptionType('bootstrap', this.getType(), typeof u));\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getType(): string {\r\n    return 'IFlagBase[]';\r\n  }\r\n}\r\n\r\nexport class UserValidator implements TypeValidator {\r\n  messages: string[] = [];\r\n\r\n  is(u: unknown): boolean {\r\n    if (typeof u !== 'object' || u === null) {\r\n      this.messages.push(OptionMessages.mandatory('user'));\r\n      return false;\r\n    }\r\n\r\n    const user = u as any;\r\n\r\n    if (typeof user.keyId !== 'string' || user.keyId.trim() === '') {\r\n      this.messages.push(OptionMessages.mandatory('user.keyId'));\r\n      return false;\r\n    }\r\n\r\n    if (typeof user.name !== 'string' || user.name.trim() === '') {\r\n      this.messages.push(OptionMessages.mandatory('user.name'));\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getType(): string {\r\n    return 'user';\r\n  }\r\n}\r\n\r\n// Our reference SDK, Go, parses date/time strings with the time.RFC3339Nano format.\r\n// This regex should match strings that are valid in that format, and no others.\r\n// Acceptable:\r\n//   2019-10-31T23:59:59Z, 2019-10-31T23:59:59.100Z,\r\n//   2019-10-31T23:59:59-07, 2019-10-31T23:59:59-07:00, etc.\r\n// Unacceptable: no \"T\", no time zone designation\r\nconst DATE_REGEX = /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d\\d*)?(Z|[-+]\\d\\d(:\\d\\d)?)/;\r\n\r\n/**\r\n * Validate a value is a date. Values which are numbers are treated as dates and any string\r\n * which if compliant with `time.RFC3339Nano` is a date.\r\n */\r\nexport class DateValidator implements TypeValidator {\r\n  is(u: unknown): boolean {\r\n    return typeof u === 'number' || (typeof u === 'string' && DATE_REGEX.test(u));\r\n  }\r\n\r\n  getType(): string {\r\n    return 'date';\r\n  }\r\n}\r\n\r\n/**\r\n * Validates that a string is a valid kind.\r\n */\r\nexport class KindValidator extends StringMatchingRegex {\r\n  constructor() {\r\n    super(/^(\\w|\\.|-)+$/);\r\n  }\r\n\r\n  override is(u: unknown): u is string {\r\n    return super.is(u) && u !== 'kind';\r\n  }\r\n}\r\n\r\n/**\r\n * A set of standard type validators.\r\n */\r\nexport class TypeValidators {\r\n  static readonly String = new Type<string>('string', '');\r\n\r\n  static readonly Number = new Type<number>('number', 0);\r\n\r\n  static readonly ObjectOrFactory = new FactoryOrInstance();\r\n\r\n  static readonly Object = new Type<object>('object', {});\r\n\r\n  static readonly StringArray = new TypeArray<string>('string[]', '');\r\n\r\n  static readonly Boolean = new Type<boolean>('boolean', true);\r\n\r\n  static readonly User = new Type<object>('object', {});\r\n\r\n  static readonly Bootstrap = new Type<object>('object', {});\r\n\r\n  static readonly Function = new Function();\r\n\r\n  static createTypeArray<T>(typeName: string, example: T) {\r\n    return new TypeArray<T>(typeName, example);\r\n  }\r\n\r\n  static numberWithMin(min: number): NumberWithMinimum {\r\n    return new NumberWithMinimum(min);\r\n  }\r\n\r\n  static stringMatchingRegex(expression: RegExp): StringMatchingRegex {\r\n    return new StringMatchingRegex(expression);\r\n  }\r\n\r\n  static readonly Date = new DateValidator();\r\n\r\n  static readonly Kind = new KindValidator();\r\n  static readonly NullableBoolean = new NullableBoolean();\r\n}","export * from './ClientContext';\r\nexport * from './IClientContext';\r\nexport * from './IOptions';\r\nexport * from './IUser';\r\nexport * from './IValidatedOptions';\r\nexport * from './OptionMessages';\r\nexport * from './UserBuilder';\r\nexport * from './Validators';","import { IInfo, IPlatformData, ISdkData } from \"../IInfo\";\r\nimport { name, version } from '../../version';\r\n\r\n\r\nexport default class BrowserInfo implements IInfo {\r\n  get appType(): string {\r\n    return 'Browser-Client-SDK';\r\n  }\r\n\r\n  platformData(): IPlatformData {\r\n    return {\r\n      os: {},\r\n      name: 'Browser',\r\n      additional: {},\r\n    };\r\n  }\r\n\r\n  sdkData(): ISdkData {\r\n    return {\r\n      name: name,\r\n      version: version,\r\n      userAgent: `${ this.appType }/${ version }`,\r\n    };\r\n  }\r\n}","import { IPlatform } from \"../IPlatform\";\r\nimport { IInfo } from \"../IInfo\";\r\nimport { IRequests } from \"../requests\";\r\nimport { IOptions } from \"../../options/IOptions\";\r\nimport BrowserInfo from \"./BrowserInfo\";\r\nimport { BrowserRequests } from \"./BrowserRequests\";\r\nimport { IWebSocketWithEvents } from \"../IWebSocket\";\r\nimport BrowserWebSocket from \"./BrowserWebSocket\";\r\n\r\nexport class BrowserPlatform implements IPlatform {\r\n  info: IInfo = new BrowserInfo();\r\n\r\n  requests: IRequests;\r\n  webSocket: IWebSocketWithEvents;\r\n\r\n  constructor(options: IOptions) {\r\n    this.requests = new BrowserRequests();\r\n    this.webSocket = new BrowserWebSocket();\r\n  }\r\n}","import { IRequestOptions, IRequests } from \"../requests\";\r\n\r\nexport  class BrowserRequests implements IRequests {\r\n  fetch(url: string, options: IRequestOptions = {}): Promise<any> {\r\n    return fetch(url, options);\r\n  }\r\n}","import { IWebSocket, IWebSocketConfig } from \"../IWebSocket\";\r\nimport { Emits } from \"../../utils/Emits\";\r\nimport { IEventEmitter } from \"../../utils/IEventEmitter\";\r\nimport { EventEmitter } from \"../../utils/EventEmitter\";\r\nimport { generateConnectionToken } from \"../../data-sync/utils\";\r\nimport { StreamResponseEventType } from \"../../data-sync/types\";\r\nimport { IUser } from \"../../options/IUser\";\r\n\r\nconst socketConnectionIntervals = [1000, 3000, 5000, 7000, 11000, 13000, 30000, 60000];\r\n\r\nclass BrowserWebSocket implements IWebSocket {\r\n  emitter: IEventEmitter;\r\n  private ws?: WebSocket;\r\n  private retryCounter = 0;\r\n  private closed: boolean = false;\r\n\r\n  private _config: IWebSocketConfig = {} as IWebSocketConfig;\r\n\r\n  constructor() {\r\n    this.emitter = new EventEmitter();\r\n  }\r\n\r\n  identify(user: IUser) {\r\n    this._config.user = user;\r\n    this.doDataSync();\r\n  }\r\n\r\n  connect() {\r\n    let that = this;\r\n    const startTime = Date.now();\r\n    const url = this._config.streamingUri.replace(/^http/, 'ws') + `?type=client&token=${ generateConnectionToken(this._config.sdkKey) }`;\r\n    this.ws = new WebSocket(url);\r\n\r\n    // Connection opened\r\n    that.ws?.addEventListener('open', function (this: WebSocket, event) {\r\n      // this is the websocket instance to which the current listener is binded to, it's different from that.socket\r\n      that._config.logger.info(`WebSocket connection succeeded, connection time: ${ Date.now() - startTime } ms`);\r\n      that.doDataSync();\r\n      that.sendPingMessage();\r\n    });\r\n\r\n    // Connection closed\r\n    that.ws?.addEventListener('close', function (event) {\r\n      that._config.logger.warn('WebSocket closed');\r\n      if (event.code === 4003) { // do not reconnect when 4003\r\n        return;\r\n      }\r\n\r\n      that.reconnect();\r\n    });\r\n\r\n    // Connection error\r\n    that.ws?.addEventListener('error', function (event) {\r\n      // reconnect\r\n      that._config.logger.debug('error');\r\n    });\r\n\r\n    // Listen for messages\r\n    that.ws?.addEventListener('message', function (event) {\r\n      const message = JSON.parse(event.data as string);\r\n      if (message.messageType === 'data-sync') {\r\n        switch (message.data.eventType) {\r\n          case StreamResponseEventType.patch:\r\n            that.emitter.emit('patch', message);\r\n            break;\r\n          case StreamResponseEventType.full:\r\n            that.emitter.emit('put', message);\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.closed = true;\r\n    this.ws?.close(4003, 'The client is closed by user');\r\n    this.ws = undefined;\r\n  }\r\n\r\n  config(param: IWebSocketConfig) {\r\n    if (param.emitter) {\r\n      this.emitter = param.emitter;\r\n    }\r\n\r\n    this._config = {...param};\r\n  }\r\n\r\n  private sendPingMessage() {\r\n    const payload = {\r\n      messageType: 'ping',\r\n      data: null\r\n    };\r\n\r\n    setTimeout(() => {\r\n      try {\r\n        if (this.ws?.readyState === WebSocket.OPEN) {\r\n          this._config.logger.debug('sending ping')\r\n          this.ws.send(JSON.stringify(payload));\r\n          this.sendPingMessage();\r\n        } else {\r\n          this._config.logger.debug(`socket closed at ${ new Date() }`);\r\n        }\r\n      } catch (err) {\r\n        this._config.logger.debug(err);\r\n      }\r\n    }, this._config.pingInterval);\r\n  }\r\n\r\n  private doDataSync() {\r\n    const payload = {\r\n      messageType: 'data-sync',\r\n      data: {\r\n        timestamp: this._config.getStoreTimestamp(),\r\n        user: this._config.user\r\n      }\r\n    };\r\n\r\n    try {\r\n      if (this.ws?.readyState === WebSocket.OPEN) {\r\n        this._config.logger.debug('requesting data');\r\n        this.ws?.send(JSON.stringify(payload));\r\n      } else {\r\n        this._config.logger.error(`not requesting data because socket not open`);\r\n      }\r\n    } catch (err) {\r\n      this._config.logger.debug(err);\r\n    }\r\n  }\r\n\r\n  private reconnect() {\r\n    if (!this.closed) {\r\n      this.ws = undefined;\r\n      const waitTime = socketConnectionIntervals[Math.min(this.retryCounter++, socketConnectionIntervals.length - 1)];\r\n      this._config.logger.info(`The client will try to reconnect in ${ waitTime } milliseconds.`);\r\n      setTimeout(() => {\r\n        this._config.logger.info(`The client is trying to reconnect, flag evaluation results may be stale until reconnected, waited for: ${ waitTime } milliseconds`);\r\n        this.connect();\r\n      }, waitTime);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Emits(BrowserWebSocket);","import { FbClientCore } from \"../../FbClientCore\";\r\nimport { IOptions } from \"../../options/IOptions\";\r\nimport { BasicLogger } from \"../../logging/BasicLogger\";\r\nimport { EventEmitter } from \"../../utils/EventEmitter\";\r\nimport { SafeLogger } from \"../../logging/SafeLogger\";\r\nimport { Emits } from \"../../utils/Emits\";\r\nimport { IEventEmitter } from \"../../utils/IEventEmitter\";\r\nimport { BrowserPlatform } from \"./BrowserPlatform\";\r\nimport LocalStorageStore from \"./LocalStorageStore\";\r\nimport { IPlatform } from \"../IPlatform\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nclass FbClient extends FbClientCore {\r\n  emitter: IEventEmitter;\r\n\r\n  constructor(options: IOptions, platform: IPlatform | undefined = undefined) {\r\n    const fallbackLogger = new BasicLogger({\r\n      level: 'none',\r\n      destination: console.log\r\n    });\r\n\r\n    const logger = options.logger ? new SafeLogger(options.logger, fallbackLogger) : fallbackLogger;\r\n\r\n    const emitter = new EventEmitter(logger);\r\n\r\n    let { store } = options;\r\n    if (!store) {\r\n      store = new LocalStorageStore(options);\r\n    }\r\n\r\n    super(\r\n      {...options, logger, store },\r\n      platform ?? new BrowserPlatform({...options, logger}),\r\n      {\r\n        onError: (err: Error) => {\r\n          if (emitter.listenerCount('error')) {\r\n            emitter.emit('error', err);\r\n          }\r\n        },\r\n        onFailed: (err: Error) => {\r\n          emitter.emit('failed', err);\r\n        },\r\n        onReady: () => {\r\n          emitter.emit('ready');\r\n        },\r\n        onUpdate: (keys: string[]) => {\r\n          emitter.emit('update', [keys]);\r\n          keys.forEach((key) => emitter.emit(`update:${ key }`, key));\r\n        },\r\n        hasEventListeners: () =>\r\n          emitter\r\n            .eventNames()\r\n            .some(\r\n              (name) =>\r\n                name === 'update' || (typeof name === 'string' && name.startsWith('update:')),\r\n            ),\r\n      },\r\n    );\r\n\r\n    this.emitter = emitter;\r\n  }\r\n}\r\n\r\nexport default Emits(FbClient);","import {\r\n  StoreStorageKey,\r\n  IStoreDataStorage, CurrentUserStorageKey\r\n} from \"../../store/store\";\r\nimport { IOptions } from \"../../options/IOptions\";\r\nimport { BaseStore } from \"../../store/BaseStore\";\r\nimport { ILogger } from \"../../logging\";\r\nimport { serializeUser } from \"../../utils/serializeUser\";\r\n\r\nexport default class LocalStorageStore extends BaseStore {\r\n  private logger: ILogger;\r\n\r\n  constructor(options: IOptions) {\r\n    super();\r\n\r\n    this.logger = options.logger!;\r\n  }\r\n\r\n  /* eslint-disable class-methods-use-this */\r\n  close(): void {\r\n    // For the LocalStorage store this is a no-op.\r\n  }\r\n\r\n  get description(): string {\r\n    return 'local-storage-store'\r\n  }\r\n\r\n  // This method needs to be overridden in the child class\r\n  protected async saveUser(): Promise<void> {\r\n    localStorage.setItem(CurrentUserStorageKey, serializeUser(this._user));\r\n  }\r\n\r\n  protected override async dumpStoreToStorage() {\r\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\r\n    localStorage.setItem(storageKey, JSON.stringify(this.store));\r\n  }\r\n\r\n  protected override async loadStoreFromStorage() {\r\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\r\n    const dataStoreStr = localStorage.getItem(storageKey);\r\n    let store: IStoreDataStorage | null = null;\r\n\r\n    try {\r\n      if (dataStoreStr && dataStoreStr.trim().length > 0) {\r\n        store = JSON.parse(dataStoreStr);\r\n      }\r\n    } catch (err) {\r\n      this.logger.error(`error while loading local data store: ${storageKey}`, err);\r\n    }\r\n\r\n    if (!!store) {\r\n      this.store = store;\r\n    } else {\r\n      this.store = {\r\n        flags: {},\r\n        version: 0\r\n      };\r\n    }\r\n  }\r\n}","export * from './IInfo';\r\nexport * from './IStore';\r\nexport * from './IPlatform';\r\nexport * from './IWebSocket';\r\nexport * from './requests';\r\nexport * from './browser/BrowserRequests';\r\n\r\nimport BrowserWebSocket from './browser/BrowserWebSocket';\r\n\r\nexport {\r\n  BrowserWebSocket\r\n};","import { IStore } from \"../platform\";\r\nimport { IKeyedStoreItem, IStoreDataStorage, IStoreItem, IStoreKindData } from \"./store\";\r\nimport { IUser } from \"../options\";\r\nimport { IDataKind } from \"../IDataKind\";\r\n\r\nexport class BaseStore implements IStore {\r\n  protected store: IStoreDataStorage  = {} as IStoreDataStorage;\r\n\r\n  protected initCalled = false;\r\n\r\n  protected _user: IUser = {} as IUser;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  async identify(user: IUser) {\r\n    this._user = {...user};\r\n\r\n    await this.saveUser();\r\n    await this.loadStoreFromStorage();\r\n  }\r\n\r\n  get user(): IUser {\r\n    return this._user;\r\n  }\r\n\r\n  protected async addItem(kind: IDataKind, key: string, item: IStoreItem) {\r\n    let items = this.store[kind.namespace];\r\n    if (!items) {\r\n      items = {};\r\n      this.store[kind.namespace] = items;\r\n    }\r\n    if (Object.hasOwnProperty.call(items, key)) {\r\n      const old = items[key];\r\n      if (!old || old.version <= item.version) {\r\n        items[key] = item;\r\n      }\r\n    } else {\r\n      items[key] = item;\r\n    }\r\n\r\n    if (item.version > this.store.version) {\r\n      this.store.version = item.version;\r\n    }\r\n\r\n    await this.dumpStoreToStorage();\r\n  }\r\n\r\n  get(kind: IDataKind, key: string): IStoreItem | null {\r\n    const items = this.store[kind.namespace];\r\n    if (items) {\r\n      if (Object.prototype.hasOwnProperty.call(items, key)) {\r\n        const item = items[key];\r\n        if (item) {\r\n          return item;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  all(kind: IDataKind): [IStoreKindData, number] {\r\n    const result: IStoreKindData = {};\r\n    const items = this.store[kind.namespace] ?? {};\r\n    Object.entries(items).forEach(([key, item]) => {\r\n      if (item) {\r\n        result[key] = <IStoreItem>item;\r\n      }\r\n    });\r\n\r\n    return [result, this.store.version];\r\n  }\r\n\r\n  async init(allData: IStoreDataStorage) {\r\n    this.store = allData as IStoreDataStorage;\r\n\r\n    Object.keys(allData).map(namespace => {\r\n      Object.entries(allData[namespace]).forEach(([_, item]) => {\r\n        const ele = item as IStoreItem;\r\n        if (ele.version > this.store.version) {\r\n          this.store.version = ele.version;\r\n        }\r\n      })\r\n    });\r\n\r\n    await this.dumpStoreToStorage();\r\n    this.initCalled = true;\r\n  }\r\n\r\n  async upsert(kind: IDataKind, data: IKeyedStoreItem) {\r\n    await this.addItem(kind, data.key, data);\r\n  }\r\n\r\n  initialized(): boolean {\r\n    return this.initCalled;\r\n  }\r\n\r\n  /* eslint-disable class-methods-use-this */\r\n  close(): void {\r\n    // For the LocalStorage store this is a no-op.\r\n  }\r\n\r\n  get version(): number {\r\n    return this.store.version;\r\n  }\r\n\r\n  // This getter needs to be overridden in the child class\r\n  get description(): string {\r\n    return '';\r\n  }\r\n\r\n  // This method needs to be overridden in the child class\r\n  protected async saveUser(): Promise<void> {\r\n  }\r\n\r\n  // This method needs to be overridden in the child class\r\n  protected async loadStoreFromStorage(): Promise<void> {\r\n  }\r\n\r\n  // This method needs to be overridden in the child class\r\n  protected async dumpStoreToStorage(): Promise<void> {\r\n  }\r\n}","import { IDataKind } from \"../IDataKind\";\r\n\r\nexport default class DataKinds {\r\n  static readonly Flags: IDataKind = {\r\n    namespace: 'flags'\r\n  };\r\n}","import {\r\n  StoreStorageKey,\r\n  IStoreDataStorage\r\n} from \"./store\";\r\nimport { BaseStore } from \"./BaseStore\";\r\n\r\nexport default class InMemoryStore extends BaseStore {\r\n  private allStores: { [DataStoreStorageKey: string]: IStoreDataStorage } = {};\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /* eslint-disable class-methods-use-this */\r\n  close(): void {\r\n    // For the LocalStorage store this is a no-op.\r\n  }\r\n\r\n  get description(): string {\r\n    return 'in-memory-store'\r\n  }\r\n\r\n  protected async saveUser(): Promise<void> {\r\n    // For in-memory store, this is a no-op.\r\n  }\r\n\r\n  protected override async dumpStoreToStorage() {\r\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\r\n    this.allStores[storageKey] = {...this.store};\r\n  }\r\n\r\n  protected override async loadStoreFromStorage() {\r\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\r\n\r\n    this.store = this.allStores[storageKey] ?? { flags: {}, version: 0 };\r\n  }\r\n}","export * from './DataKinds';\r\nexport * from './IDataSourceUpdates';\r\nexport * from './InMemoryStore';\r\nexport * from './serialization';\r\nexport * from './store';\r\nexport * from './BaseStore';","import { IFlag } from \"../evaluation/data/IFlag\";\r\nimport DataKinds from \"./DataKinds\";\r\nimport { IVersionedData } from \"../IVersionedData\";\r\nimport { IDataKind } from \"../IDataKind\";\r\n\r\nexport interface Flags {\r\n  flags: { [name: string]: IFlag };\r\n}\r\n\r\ntype VersionedFlag = IVersionedData & IFlag;\r\n\r\nexport interface IPatchData {\r\n  data: VersionedFlag;\r\n  kind: IDataKind;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function deserializeAll(flags: IFlag[]): Flags {\r\n  const result = {\r\n    [DataKinds.Flags.namespace]: {}\r\n  };\r\n\r\n  if (flags?.length) {\r\n    result[DataKinds.Flags.namespace] = flags.reduce((acc: any, cur: any) => {\r\n      acc[cur.id] = {...cur, version: cur.timestamp || 0, key: cur.id, variations: cur.variationOptions};\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  return result as any as Flags;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function deserializePatch(flags: IFlag[]): IPatchData[] {\r\n  const result = [\r\n    ...flags?.map(item => ({\r\n      data: {\r\n        ...item,\r\n        version:item.timestamp,\r\n        key: item.id,\r\n        variations: item.variationOptions\r\n      },\r\n      kind: DataKinds.Flags\r\n    })) || []\r\n  ];\r\n\r\n  return result as any as IPatchData[];\r\n}\r\n","export const StoreStorageKey = 'fb-datastore';\r\n\r\nexport const CurrentUserStorageKey = 'fb-user';\r\n\r\n/**\r\n * Represents an item which can be stored in the feature store.\r\n */\r\nexport interface IStoreItem {\r\n  version: number;\r\n\r\n  // The actual data associated with the item.\r\n  [attribute: string]: any;\r\n}\r\n\r\n/**\r\n * When upserting an item it must contain a key.\r\n */\r\nexport interface IKeyedStoreItem extends IStoreItem {\r\n  key: string;\r\n}\r\n\r\n/**\r\n * Represents the storage for a single kind of data. e.g. 'flag' or 'segment'.\r\n */\r\nexport interface IStoreKindData {\r\n  [key: string]: IStoreItem;\r\n}\r\n\r\n/**\r\n * Represents the storage for the full data store.\r\n */\r\nexport interface IStoreDataStorage {\r\n  flags: IStoreKindData;\r\n  version: number;\r\n\r\n  // This attribute is to ingore the type check error\r\n  [attribute: string]: any;\r\n}","import { IEventEmitter } from \"./IEventEmitter\";\r\n\r\nexport type EventableConstructor<T = {}> = new (...args: any[]) => T;\r\nexport type Eventable = EventableConstructor<{ emitter: IEventEmitter }>;\r\n\r\n/**\r\n * Adds the implementation of an event emitter to something that contains\r\n * a field of `emitter` with type `EventEmitter`.\r\n * @param Base The class to derive the mixin from.\r\n * @returns A class extending the base with an event emitter.\r\n */\r\nexport function Emits<TBase extends Eventable>(Base: TBase) {\r\n  return class WithEvents extends Base implements IEventEmitter {\r\n    on(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.on(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    addListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.addListener(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    once(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.once(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    removeListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.removeListener(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    off(eventName: string | symbol, listener: (...args: any) => void, context?: any): this {\r\n      this.emitter.off(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    removeAllListeners(event?: string | symbol): this {\r\n      this.emitter.removeAllListeners(event);\r\n      return this;\r\n    }\r\n\r\n    listeners(eventName: string | symbol): Function[] {\r\n      return this.emitter.listeners(eventName);\r\n    }\r\n\r\n    emit(eventName: string | symbol, ...args: any[]): this  {\r\n      this.emitter.emit(eventName, args);\r\n      return this;\r\n    }\r\n\r\n    listenerCount(eventName: string | symbol): number {\r\n      return this.emitter.listenerCount(eventName);\r\n    }\r\n\r\n    prependListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.prependListener(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    prependOnceListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\r\n      this.emitter.prependOnceListener(eventName, listener, context);\r\n      return this;\r\n    }\r\n\r\n    eventNames(): (string | symbol)[] {\r\n      return this.emitter.eventNames();\r\n    }\r\n\r\n    maybeReportError (error: any): this {\r\n      this.emitter.maybeReportError(error);\r\n      return this;\r\n    }\r\n  };\r\n}","import { ILogger } from \"../logging/ILogger\";\r\nimport { IEventEmitter } from \"./IEventEmitter\";\r\n\r\ninterface Events {\r\n  [key: string | symbol]: {\r\n    handler: (...args: any[]) => void;\r\n    context: any;\r\n  }[];\r\n}\r\n\r\nexport class EventEmitter implements IEventEmitter {\r\n  private events: Events = {};\r\n\r\n  constructor(private logger?: ILogger) {}\r\n\r\n  private listeningTo (event: string) {\r\n    return !!this.events[event];\r\n  }\r\n\r\n  on (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    this.events[event] = this.events[event] || [];\r\n    this.events[event] = this.events[event].concat({\r\n      handler: handler,\r\n      context: context,\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  addListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    return this.on(event, handler, context);\r\n  }\r\n\r\n  once (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    const onceHandler = (...args: any[]) => {\r\n      this.off(event, onceHandler, context);\r\n      handler.apply(context, args);\r\n    };\r\n    return this.on(event, onceHandler, context);\r\n  }\r\n\r\n  off (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    if (!this.events[event]) {\r\n      return this;\r\n    }\r\n    for (let i = 0; i < this.events[event].length; i++) {\r\n      if (this.events[event][i].handler === handler && this.events[event][i].context === context) {\r\n        this.events[event] = this.events[event].slice(0, i).concat(this.events[event].slice(i + 1));\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  removeListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    return this.off(event, handler, context);\r\n  }\r\n\r\n  removeAllListeners (event?: string | symbol): this {\r\n    if (event) {\r\n      delete this.events[event];\r\n    } else {\r\n      this.events = {};\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  listeners (event: string | symbol): Function[] {\r\n    return this.events[event] ? this.events[event].map((event) => event.handler) : [];\r\n  }\r\n\r\n  emit (event: string | symbol, ...args: any[]): this {\r\n    if (!this.events[event]) {\r\n      return this;\r\n    }\r\n    // Copy the list of handlers before iterating, in case any handler adds or removes another handler.\r\n    // Any such changes should not affect what we do here-- we want to notify every handler that existed\r\n    // at the moment that the event was fired.\r\n    const copiedHandlers = [...this.events[event]];\r\n    for (let i = 0; i < copiedHandlers.length; i++) {\r\n      copiedHandlers[i].handler.apply(copiedHandlers[i].context, Array.prototype.slice.call(arguments, 1));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  listenerCount (event: string | symbol): number {\r\n    return this.events[event] ? this.events[event].length : 0;\r\n  }\r\n\r\n  prependListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    this.events[event] = this.events[event] || [];\r\n    this.events[event] = [\r\n      {\r\n        handler: handler,\r\n        context: context,\r\n      },\r\n      ...this.events[event]\r\n    ];\r\n\r\n    return this;\r\n  }\r\n\r\n  prependOnceListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\r\n    const onceHandler = (...args: any[]) => {\r\n      this.off(event, onceHandler, context);\r\n      handler.apply(context, args);\r\n    };\r\n    return this.prependListener(event, onceHandler, context);\r\n  }\r\n\r\n  eventNames (): (string | symbol)[] {\r\n    return Object.keys(this.events);\r\n  }\r\n\r\n  maybeReportError (error: any): this {\r\n    if (!error) {\r\n      return this;\r\n    }\r\n    if (this.listeningTo('error')) {\r\n      this.emit('error', error);\r\n    } else {\r\n      this.logger?.error(error);\r\n    }\r\n\r\n    return this;\r\n  }\r\n}","import { Regex } from \"./Regex\";\r\n\r\nexport interface IConvertResult<TValue> {\r\n  isSucceeded: boolean,\r\n  value?: TValue\r\n}\r\n\r\nexport class ValueConverters {\r\n  static bool(value: string): IConvertResult<boolean> {\r\n    if (value?.toUpperCase() === 'TRUE') {\r\n      return ValueConverters.success<boolean>(true);\r\n    }\r\n\r\n    if (value?.toUpperCase() === 'FALSE') {\r\n      return ValueConverters.success<boolean>(false);\r\n    }\r\n\r\n    return ValueConverters.error<boolean>();\r\n  }\r\n\r\n  static number(value: string): IConvertResult<number> {\r\n    const num = Number(value);\r\n\r\n    if (Number.isNaN(num)) {\r\n      return ValueConverters.error<number>();\r\n    }\r\n\r\n    return ValueConverters.success<number>(num);\r\n  }\r\n\r\n  static string(value: string): IConvertResult<string> {\r\n    return ValueConverters.success<string>(value);\r\n  }\r\n\r\n  static json(value: string): IConvertResult<unknown> {\r\n    try {\r\n      const val = JSON.parse(value);\r\n      return ValueConverters.success<unknown>(val);\r\n    } catch (err) {\r\n      return ValueConverters.error<unknown>();\r\n    }\r\n  }\r\n\r\n  private static success<TValue>(value: TValue): IConvertResult<TValue> {\r\n    return {\r\n      isSucceeded: true,\r\n      value: value\r\n    }\r\n  }\r\n\r\n  private static error<TValue>(): IConvertResult<TValue> {\r\n    return {\r\n      isSucceeded: false\r\n    }\r\n  }\r\n}","// This function is designed to remove any trailing forward slashes at the end of the provided URI string\r\nexport function canonicalizeUri(uri: string): string {\r\n  return uri.replace(/\\/+$/, '');\r\n}","/**\r\n * Wait before calling the same function. Useful for expensive calls.\r\n * Adapted from https://amitd.co/code/typescript/debounce.\r\n *\r\n * @return The debounced function.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const debouncedFunction = debounce(e => {\r\n *   console.log(e);\r\n * }, 5000);\r\n *\r\n * // Console logs 'Hello world again ' after 5 seconds\r\n * debouncedFunction('Hello world');\r\n * debouncedFunction('Hello world again');\r\n * ```\r\n * @param fn The function to be debounced.\r\n * @param delayMs Defaults to 5 seconds.\r\n */\r\nexport const debounce = <T extends (...args: any[]) => ReturnType<T>>(\r\n  fn: T,\r\n  delayMs: number = 5000,\r\n): ((...args: Parameters<T>) => void) => {\r\n  let timer: ReturnType<typeof setTimeout>;\r\n\r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      fn(...args);\r\n    }, delayMs);\r\n  };\r\n};\r\n","import { IInfo } from \"../platform/IInfo\";\r\n\r\nexport type Headers = {\r\n  Authorization: string;\r\n  'X-User-Agent': string;\r\n  'Content-Type': string;\r\n};\r\n\r\nexport function defaultHeaders(\r\n  sdkKey: string,\r\n  info: IInfo\r\n): Headers {\r\n  const {userAgent, version} = info.sdkData();\r\n\r\n  const headers: Headers = {\r\n    'Content-Type': 'application/json',\r\n    'X-User-Agent': userAgent ?? `${info.appType}/${version}`,\r\n    'Authorization': sdkKey\r\n  };\r\n\r\n  return headers;\r\n}\r\n\r\nexport function httpErrorMessage(\r\n  err: {\r\n    status: number;\r\n    message: string;\r\n  },\r\n  context: string,\r\n  retryMessage?: string,\r\n): string {\r\n  let desc;\r\n  if (err.status) {\r\n    desc = `error ${ err.status }${ err.status === 401 ? ' (invalid SDK key)' : '' }`;\r\n  } else {\r\n    desc = `I/O error (${ err.message || err })`;\r\n  }\r\n  const action = retryMessage ?? 'giving up permanently';\r\n  return `Received ${ desc } for ${ context } - ${ action }`;\r\n}\r\n","export * from './isNullOrUndefined';\r\nexport * from './sleep';\r\nexport * from './ValueConverters';\r\nexport * from './VoidFunction';\r\nexport * from './serializeUser';\r\nexport * from './debounce';","export function isNullOrUndefined(val: any) {\r\n  return val === null || val === undefined;\r\n}","import { IUser } from \"../options/IUser\";\r\n\r\nexport function serializeUser(user: IUser | undefined): string {\r\n  if (!user) {\r\n    return '';\r\n  }\r\n\r\n  const builtInProperties = `${user.keyId},${user.name}`;\r\n\r\n  const customizedProperties = user.customizedProperties\r\n    ?.sort((a, b) => {\r\n      const nameA = a.name.toLowerCase();\r\n      const nameB = b.name.toLowerCase();\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    })\r\n    .map(p => `${p.name}:${p.value}`)\r\n    .join(',');\r\n\r\n  return `${builtInProperties},${customizedProperties}`;\r\n}","const sleep = async (delayMillis: number = 1000) =>\r\n  new Promise((resolve) => {\r\n    setTimeout(resolve, delayMillis);\r\n  });\r\n\r\nexport default sleep;","export const version = \"3.0.10\"; export const name = \"@featbit/js-client-sdk\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(9872);\n"],"names":["root","factory","exports","module","define","amd","a","i","this","validations","startWaitTime","TypeValidators","Number","sdkKey","String","pollingUri","streamingUri","eventsUri","webSocketPingInterval","logger","Object","store","ObjectOrFactory","dataSynchronizer","flushInterval","maxEventsInQueue","pollingInterval","offline","Boolean","dataSyncMode","bootstrap","Bootstrap","user","User","defaultValues","DataSyncModeEnum","STREAMING","sendEvents","options","undefined","constructor","bootstrapProvider","NullBootstrapProvider","errors","validatedOptions","keys","forEach","optionName","optionValue","validator","is","getType","push","wrongOptionTypeBoolean","NumberWithMinimum","min","optionBelowMinimum","UserValidator","messages","wrongOptionType","warn","unknownOption","validateTypesAndNames","error","streamingUriMissing","isNullOrUndefined","EmptyString","pollingUriMissing","eventsUriMissing","partialEndpoint","POLLING","validateEndpoints","canonicalizeUri","length","JsonBootstrapProvider","_","info","Function","dataSynchronizerFactory","storeFactory","Context","valid","message","fromUser","contextForError","keyId","name","trim","context","_user","value","property","customizedProperties","find","x","_options","build","_platform","platform","mode","flags","ClientState","callbacks","state","Initializing","onError","onFailed","onReady","onUpdate","hasEventListeners","config","Error","init","clientContext","identify","dataSourceUpdates","evaluator","populate","eventProcessor","NullEventProcessor","NullDataSynchronizer","initSuccess","DefaultEventProcessor","listeners","createStreamListeners","put","patch","webSocket","version","requests","e","dataSourceErrorHandler","start","all","Flags","setTimeout","initialized","msg","TimeoutError","Failed","rejectionReason","initReject","Initialized","waitForInitialization","initializedPromise","Promise","resolve","reject","initResolve","boolVariation","key","defaultValue","evaluateCore","ValueConverters","bool","boolVariationDetail","jsonVariation","json","jsonVariationDetail","numberVariation","number","numberVariationDetail","stringVariation","string","stringVariationDetail","variation","variationDetail","getAllVariations","ClientError","result","map","flagKey","evalResult","evaluate","kind","reason","close","track","eventName","metricValue","metricEvent","MetricEvent","appType","record","flush","callback","err","typeConverter","ReasonKinds","FlagNotFound","toEvalEvent","isSucceeded","WrongType","code","flag","variationOptions","id","data","deserializeAll","dataSet","userKeyId","MinInt","onChange","allData","checkForChanges","doInit","oldData","then","updatedKeys","flatMap","namespace","oldDataForKind","newDataForKind","mergedData","filter","isUpdated","upsert","doUpsert","oldItem","get","newData","createPutListener","onPutCompleteHandler","deserializeData","processJson","initData","debug","createPatchListener","onPatchCompleteHandler","deserializePatch","item","onCompleteHandlers","Map","set","stop","requestor","getStoreTimestamp","errorHandler","stopped","poll","startTime","Date","now","requestData","body","elapsed","sleepFor","Math","max","status","isHttpRecoverable","httpErrorMessage","PollingError","featureFlags","processStreamResponse","JSON","parse","messageType","eventType","StreamResponseEventType","full","timeoutHandle","clearTimeout","headers","defaultHeaders","uri","request","requestUrl","res","fetch","text","timestamp","payload","cb","method","stringify","StreamingError","socket","pingInterval","addListener","event","logConnectionStarted","connect","connectionAttemptStartTime","alphabet","encodeNumber","param","s","slice","split","n","join","replace","timestampCode","toString","floor","random","super","UnexpectedResponseError","EvalResult","flagNotFound","matched","val","Match","targetedVariation","variations","v","EvalEvent","sendToExperiment","VariationDataType","closed","eventQueue","DefaultEventQueue","eventDispatcher","EventDispatcher","flushLoop","flushEvent","FlushEvent","waitForCompletion","shutdown","ShutdownEvent","addEvent","complete","capacity","events","clear","shift","eventsSnapshot","isEmpty","send","retry","DeliveryStatus","Succeeded","FailedAndMustShutDown","serialize","toPayload","queue","maxEventPerRequest","buffer","sender","DefaultEventSender","serializer","DefaultEventSerializer","dispatchLoop","running","PayloadEvent","addEventToBuffer","triggerFlush","snapshot","flushEvents","total","getUniqueEvents","uniqueEvents","hashes","includes","hash","AsyncEvent","getTime","isCompletedPromise","resolveFn","userPayload","metrics","route","numericValue","type","hasObject","m","featureFlagKey","LogPriority","none","LevelNames","BasicLogger","logLevel","level","destination","formatter","tryFormat","args","tryWrite","console","log","prefix","loggerRequirements","fallback","entries","tryStringify","prototype","hasOwnProperty","call","TypeError","indexOf","escapes","d","toNumber","parseInt","toInt","f","parseFloat","toFloat","j","o","O","c","formatString","out","char","charAt","nextChar","configuration","expectedType","actualType","mandatory","invalidOptionValue","missingKeyInBootstrapValue","_keyId","_name","_custom","custom","propertyName","FactoryOrInstance","factoryOrInstance","Array","isArray","typeOfFactory","Type","typeName","example","typeOf","u","TypeArray","every","StringMatchingRegex","expression","match","NullableBoolean","DATE_REGEX","DateValidator","test","KindValidator","createTypeArray","numberWithMin","stringMatchingRegex","StringArray","Kind","platformData","os","additional","sdkData","userAgent","BrowserRequests","url","socketConnectionIntervals","Emits","retryCounter","_config","emitter","EventEmitter","doDataSync","that","generateConnectionToken","ws","WebSocket","addEventListener","sendPingMessage","reconnect","emit","readyState","OPEN","waitTime","FbClient","FbClientCore","fallbackLogger","SafeLogger","BrowserPlatform","listenerCount","eventNames","some","startsWith","LocalStorageStore","BaseStore","description","saveUser","localStorage","setItem","CurrentUserStorageKey","serializeUser","dumpStoreToStorage","storageKey","StoreStorageKey","loadStoreFromStorage","dataStoreStr","getItem","BrowserWebSocket","initCalled","addItem","items","old","ele","DataKinds","InMemoryStore","allStores","reduce","acc","cur","Base","on","listener","once","removeListener","off","removeAllListeners","prependListener","prependOnceListener","maybeReportError","listeningTo","handler","concat","onceHandler","apply","copiedHandlers","arguments","toUpperCase","success","num","isNaN","debounce","fn","delayMs","timer","retryMessage","desc","sort","b","nameA","toLowerCase","nameB","p","delayMillis","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}